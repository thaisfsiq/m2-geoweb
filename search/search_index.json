{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos 2018-2019 Materiales para el m\u00f3dulo 2: Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos Repo: https://github.com/gis-master-m2/m2-geoweb Temario 1. Introducci\u00f3n a la GeoWeb : Herramientas, Servicios y Conceptos 2. Plataformas GitHub y Medium.Lenguaje Git. 3. Introducci\u00f3n a Leaflet 4. Plugins Leaflet 5. Mapas personalizados con MapBox Studio y Maputnik. 6. Introducci\u00f3n a MapBox GL JS 7. MapBox GL JS avanzado 8. Mallas discretas y algoritmos en JS 9. Visualizaci\u00f3n y publicaci\u00f3n con Kepler GL 10. Introducci\u00f3n a Cesium 11. Recursos OpenData Recursos Editor de c\u00f3digo. Recomendado https://code.visualstudio.com/ Servidor web. Plugin VSCode https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer Cliente GIT https://git-scm.com/download/win Crear cuenta de usuario en: GitHub https://github.com/ Medium https://medium.com/ MapBox https://www.mapbox.com/ Cesium https://cesium.com/ion/signup?gs=true GeoNames https://www.geonames.org/ Autor Victor Pascual Ayats","title":"Inicio"},{"location":"#mapas-y-opendata-localizacion-visualizacion-y-analisis-de-geodatos-2018-2019","text":"Materiales para el m\u00f3dulo 2: Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos","title":"Mapas y OpenData, Localizaci\u00f3n, Visualizaci\u00f3n y An\u00e1lisis de GeoDatos 2018-2019"},{"location":"#repo","text":"https://github.com/gis-master-m2/m2-geoweb","title":"Repo:"},{"location":"#temario","text":"1. Introducci\u00f3n a la GeoWeb : Herramientas, Servicios y Conceptos 2. Plataformas GitHub y Medium.Lenguaje Git. 3. Introducci\u00f3n a Leaflet 4. Plugins Leaflet 5. Mapas personalizados con MapBox Studio y Maputnik. 6. Introducci\u00f3n a MapBox GL JS 7. MapBox GL JS avanzado 8. Mallas discretas y algoritmos en JS 9. Visualizaci\u00f3n y publicaci\u00f3n con Kepler GL 10. Introducci\u00f3n a Cesium 11. Recursos OpenData","title":"Temario"},{"location":"#recursos","text":"Editor de c\u00f3digo. Recomendado https://code.visualstudio.com/ Servidor web. Plugin VSCode https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer Cliente GIT https://git-scm.com/download/win","title":"Recursos"},{"location":"#crear-cuenta-de-usuario-en","text":"GitHub https://github.com/ Medium https://medium.com/ MapBox https://www.mapbox.com/ Cesium https://cesium.com/ion/signup?gs=true GeoNames https://www.geonames.org/","title":"Crear cuenta de  usuario en:"},{"location":"#autor","text":"Victor Pascual Ayats","title":"Autor"},{"location":"introduccion_a_cesium/","text":"Recursos Cesium JS Web https://cesiumjs.org/ API https://cesiumjs.org/refdoc/ Ejemplos https://cesiumjs.org/Cesium/Build/Apps/Sandcastle/index.html Definici\u00f3n https://en.wikipedia.org/wiki/Virtual_globe Tutoriales http://cesiumjs.org/tutorials.html http://cesiumjs.org/demos.html http://developer.digitalglobe.com/docs/maps-api/integration-examples/maps-apicesium-js/ http://cesiumjs.org/Cesium/Apps/Sandcastle/index.html Videos https://www.youtube.com/watch?v=ELYsCn-caXY https://www.youtube.com/watch?v=YZ_2T6dgSw4 https://www.youtube.com/watch?v=S745qetDaCc https://www.youtube.com/watch?v=lhzYRnNYmwo Descripci\u00f3n Cesium JS es una libreria basada en WebGL, creada por la empresa AGI, que permite trabajar con globos virtuales 3D Cesium destaca por haber creado de forma abierta las especificaciones de : * Formato GLTF * Especificaci\u00f3n 3D Vector-Tiles \u00bfC\u00f3mo empezar? Nos damos de alta en https://cesium.com/ion/signup?gs=true Copiamos nuestro token Access Tokens Mapa b\u00e1sico Creamos cesium-basico.html dentro directorio geoweb Ejemplo b\u00e1sico : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map ); //add Properties /* map.camera.flyTo({ destination : Cesium.Cartesian3.fromDegrees( 2.1806,41.4003, 15000) }); */ }; / script / head body onload = Init() div id = map / div / body / html Mapa personalizado Creamos cesium-personalizado.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : //services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/ , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; / script / head body onload = Init() div id = map / div / body / html Mapa con datos externos GeoJSON Creamos cesium-ruta.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 html lang = es head title Ruta cesium / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : //services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/ , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); GPX_lyr = Cesium . GeoJsonDataSource . load ( datos/ruta.geojson , { stroke : Cesium . Color . RED , strokeWidth : 3 , clampToGround : true }); GPX_lyr . then ( function ( dataSource ) { map . dataSources . add ( dataSource ); map . flyTo ( dataSource ); }); }; / script / head body onload = Init() div id = map / div / body / html Mapa Cesium con Mapbox y/o ICGC Creamos cesium-mapbox-icgc.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA }); /* var imageReference=new Cesium.createOpenStreetMapImageryProvider({ url: https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/ , fileExtension: jpeg , maximumLevel: 19, credit: Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya }); */ Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; / script / head body onload = Init() div id = map / div / body / html Mapa con capas Creamos cesium-capas.htmlhtml lang = es head title Ejemplo extra / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet script src = https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js / script style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } html { height : 100 % ; } # capas { position : absolute ; top : 10 px ; left : 10 px ; z-index : 1000 ; width : auto ; height : auto ; background-color : white ; } li { list-style-type : none ; } ul { padding : 10 px !important } / style script function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA }); Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); var overlay = map . imageryLayers ; var ortoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/ , fileExtension : jpeg , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); ortoICGC . show = false ; var topoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/topo/GRID3857/ , fileExtension : jpeg , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); topoICGC . show = false ; var topo2ICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://tilemaps.icgc.cat/mapfactory/wmts/topo_suau/CAT3857/ , fileExtension : png , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); topo2ICGC . show = false ; var orto46 = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://tilemaps.icgc.cat/mapfactory/wmts/orto46/CAT3857/ , fileExtension : png , maximumLevel : 17 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); orto46 . show = false ; 2 $ ( .chk_capes ). on ( click , function () { var layer = $ ( this ). val (); var estado = $ ( this ). prop ( checked ); if ( layer == ortoICGC ) { ortoICGC . show = estado ; } else if ( layer == topoICGC ) { topoICGC . show = estado ; } else if ( layer == topo2ICGC ) { topo2ICGC . show = estado ; } else if ( layer == orto46 ) { orto46 . show = estado ; } }); //fin onclick }; / script / head body onload = Init() div id = capas ul li Capas / li li input type = checkbox value = ortoICGC class = chk_capes ortoICGC / li li input type = checkbox value = topoICGC class = chk_capes topoICGC / li li input type = checkbox value = topo2ICGC class = chk_capes topo2ICGC / li li input type = checkbox value = orto46 class = chk_capes orto46 / li / div div id = map / div / body / html","title":"Introduccion a cesium"},{"location":"introduccion_a_cesium/#recursos-cesium-js","text":"Web https://cesiumjs.org/ API https://cesiumjs.org/refdoc/ Ejemplos https://cesiumjs.org/Cesium/Build/Apps/Sandcastle/index.html Definici\u00f3n https://en.wikipedia.org/wiki/Virtual_globe Tutoriales http://cesiumjs.org/tutorials.html http://cesiumjs.org/demos.html http://developer.digitalglobe.com/docs/maps-api/integration-examples/maps-apicesium-js/ http://cesiumjs.org/Cesium/Apps/Sandcastle/index.html Videos https://www.youtube.com/watch?v=ELYsCn-caXY https://www.youtube.com/watch?v=YZ_2T6dgSw4 https://www.youtube.com/watch?v=S745qetDaCc https://www.youtube.com/watch?v=lhzYRnNYmwo","title":"Recursos Cesium JS"},{"location":"introduccion_a_cesium/#descripcion","text":"Cesium JS es una libreria basada en WebGL, creada por la empresa AGI, que permite trabajar con globos virtuales 3D Cesium destaca por haber creado de forma abierta las especificaciones de : * Formato GLTF * Especificaci\u00f3n 3D Vector-Tiles","title":"Descripci\u00f3n"},{"location":"introduccion_a_cesium/#como-empezar","text":"Nos damos de alta en https://cesium.com/ion/signup?gs=true Copiamos nuestro token Access Tokens","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_cesium/#mapa-basico","text":"Creamos cesium-basico.html dentro directorio geoweb Ejemplo b\u00e1sico : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map ); //add Properties /* map.camera.flyTo({ destination : Cesium.Cartesian3.fromDegrees( 2.1806,41.4003, 15000) }); */ }; / script / head body onload = Init() div id = map / div / body / html","title":"Mapa b\u00e1sico"},{"location":"introduccion_a_cesium/#mapa-personalizado","text":"Creamos cesium-personalizado.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : //services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/ , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; / script / head body onload = Init() div id = map / div / body / html","title":"Mapa personalizado"},{"location":"introduccion_a_cesium/#mapa-con-datos-externos-geojson","text":"Creamos cesium-ruta.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 html lang = es head title Ruta cesium / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : new Cesium . ArcGisMapServerImageryProvider ({ url : //services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/ , }), timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); GPX_lyr = Cesium . GeoJsonDataSource . load ( datos/ruta.geojson , { stroke : Cesium . Color . RED , strokeWidth : 3 , clampToGround : true }); GPX_lyr . then ( function ( dataSource ) { map . dataSources . add ( dataSource ); map . flyTo ( dataSource ); }); }; / script / head body onload = Init() div id = map / div / body / html","title":"Mapa con datos externos GeoJSON"},{"location":"introduccion_a_cesium/#mapa-cesium-con-mapbox-yo-icgc","text":"Creamos cesium-mapbox-icgc.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 html lang = es head title Ejemplo 0 Cesium b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } / style script function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA }); /* var imageReference=new Cesium.createOpenStreetMapImageryProvider({ url: https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/ , fileExtension: jpeg , maximumLevel: 19, credit: Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya }); */ Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); }; / script / head body onload = Init() div id = map / div / body / html","title":"Mapa Cesium con Mapbox y/o ICGC"},{"location":"introduccion_a_cesium/#mapa-con-capas","text":"Creamos cesium-capas.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 html lang = es head title Ejemplo extra / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow script src = https://cesiumjs.org/releases/1.53/Build/Cesium/Cesium.js / script link href = https://cesiumjs.org/releases/1.53/Build/Cesium/Widgets/widgets.css rel = stylesheet script src = https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js / script style # map { position : absolute ; top : 0 ; left : 0 ; height : 100 % ; width : 100 % ; margin : 0 ; overflow : hidden ; padding : 0 ; } body { padding : 0 ; margin : 0 ; overflow : hidden ; height : 100 % ; } html { height : 100 % ; } # capas { position : absolute ; top : 10 px ; left : 10 px ; z-index : 1000 ; width : auto ; height : auto ; background-color : white ; } li { list-style-type : none ; } ul { padding : 10 px !important } / style script function Init () { var imageReference = new Cesium . UrlTemplateImageryProvider ({ url : https://api.mapbox.com/styles/v1/gismasterm2/cjqg9p2lm00442rqm4vlk89rt/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA }); Cesium . Ion . defaultAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI2ZjVkZDdjMC0zNWNjLTRkMTktODM0YS1lNzVkYjQwNWQzNmEiLCJpZCI6NDMyLCJpYXQiOjE1MjUyNDI1NDR9.gnm-s8YmqoAXwQTr-dT-CCQkGxe5jk_8b6xFUd1VxgY ; map = new Cesium . Viewer ( map , { imageryProvider : imageReference , timeline : false , navigationHelpButton : true , scene3DOnly : true , fullscreenButton : true , baseLayerPicker : false , homeButton : false , infoBox : true , sceneModePicker : false , animation : false , geocoder : false , sceneMode : Cesium . SceneMode . SCENE3D , terrainProvider : Cesium . createWorldTerrain () }); map . camera . flyTo ({ destination : Cesium . Cartesian3 . fromDegrees ( 2.1806 , 41.4003 , 15000 ), orientation : { pitch : Cesium . Math . toRadians ( - 45.0 ) }, }); var overlay = map . imageryLayers ; var ortoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/orto/GRID3857/ , fileExtension : jpeg , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); ortoICGC . show = false ; var topoICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://geoserveis.icgc.cat/icc_mapesmultibase/noutm/wmts/topo/GRID3857/ , fileExtension : jpeg , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); topoICGC . show = false ; var topo2ICGC = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://tilemaps.icgc.cat/mapfactory/wmts/topo_suau/CAT3857/ , fileExtension : png , maximumLevel : 19 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); topo2ICGC . show = false ; var orto46 = overlay . addImageryProvider ( new Cesium . createOpenStreetMapImageryProvider ({ url : https://tilemaps.icgc.cat/mapfactory/wmts/orto46/CAT3857/ , fileExtension : png , maximumLevel : 17 , credit : Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya })); orto46 . show = false ; 2 $ ( .chk_capes ). on ( click , function () { var layer = $ ( this ). val (); var estado = $ ( this ). prop ( checked ); if ( layer == ortoICGC ) { ortoICGC . show = estado ; } else if ( layer == topoICGC ) { topoICGC . show = estado ; } else if ( layer == topo2ICGC ) { topo2ICGC . show = estado ; } else if ( layer == orto46 ) { orto46 . show = estado ; } }); //fin onclick }; / script / head body onload = Init() div id = capas ul li Capas / li li input type = checkbox value = ortoICGC class = chk_capes ortoICGC / li li input type = checkbox value = topoICGC class = chk_capes topoICGC / li li input type = checkbox value = topo2ICGC class = chk_capes topo2ICGC / li li input type = checkbox value = orto46 class = chk_capes orto46 / li / div div id = map / div / body / html","title":"Mapa con capas"},{"location":"introduccion_a_las_tecnologias_geoweb/","text":"Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conjunto de tecnolog\u00edas, t\u00e9cnicas y lenguajes que permiten exponer y consumir v\u00eda WWW (http) todas aquellas funcionalidades propias de los llamados sistemas de Informaci\u00f3n geogr\u00e1ficos (GIS) Temario Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conceptos geoweb Conceptos Open Data Conceptos linked Data Tecnolog\u00edas geoweb Ver presentaci\u00f3n Herramientas,Librer\u00edas y JavaScript Porque estas herramientas Porque estas herramientas JavaScript Ver presentaci\u00f3n","title":"1. Introducci\u00f3n a la GeoWeb,Herramientas, Servicios y Conceptos"},{"location":"introduccion_a_las_tecnologias_geoweb/#introduccion-a-las-tecnologias-geoweb","text":"Conjunto de tecnolog\u00edas, t\u00e9cnicas y lenguajes que permiten exponer y consumir v\u00eda WWW (http) todas aquellas funcionalidades propias de los llamados sistemas de Informaci\u00f3n geogr\u00e1ficos (GIS) Temario Introducci\u00f3n a las tecnolog\u00edas GeoWeb Conceptos geoweb Conceptos Open Data Conceptos linked Data Tecnolog\u00edas geoweb","title":"Introducci\u00f3n a las tecnolog\u00edas GeoWeb"},{"location":"introduccion_a_las_tecnologias_geoweb/#ver-presentacion","text":"Herramientas,Librer\u00edas y JavaScript Porque estas herramientas Porque estas herramientas JavaScript","title":"Ver presentaci\u00f3n"},{"location":"introduccion_a_las_tecnologias_geoweb/#ver-presentacion_1","text":"","title":"Ver presentaci\u00f3n"},{"location":"introduccion_a_leaflet/","text":"Introducci\u00f3n Ver presentaci\u00f3n Recursos Leaflet JS Web http://leafletjs.com/ API http://leafletjs.com/reference.html Plugins http://leafletjs.com/plugins.html Definici\u00f3n https://en.wikipedia.org/wiki/Leaflet_(software) Tutoriales http://www.digital-geography.com/category/leaflet-js/ http://leafletjs.com/examples.html http://maptimeboston.github.io/leaflet-intro/ http://asmaloney.com/2014/01/code/creating-an-interactive-map-with-leaflet-andopenstreetmap/ http://mappinggis.com/2013/06/como-crear-un-mapa-con-leaflet/ Videos https://www.youtube.com/watch?v=7Tll2k57ork https://egghead.io/lessons/javascript-get-started-with-leafletjs-mapping https://www.youtube.com/watch?v=1VYvjHb6KeM https://www.youtube.com/watch?v=TseoObyFg8E Descripci\u00f3n Leaflet es una librer\u00eda JavaScript opensource utilizada por Flickr, Wikimedia, foursquare, OSM, carto, GIS Cloud, Washington Post, Wall Street Journal, Geocaching.com, etc. Puntos fuertes de la API de Leaflet son: Facilidad para aprender y usar Soporte m\u00f3vil HTML 5, CSS3 y pasarela WebGL Funciona tanto en los modernos como en los viejos navegadores web Muchos plugins API bien documentada \u00bfC\u00f3mo empezar? Si utlizamos VSCODE , instalamos extensi\u00f3n Live Server View -- Extensions Descargamos geoweb.zip y descomprimir dentro de nuestro directorio geoweb del servidor web Dentro de VSCODE seleccionamos index.html -- Bot\u00f3n derecho mouse -- Open with Live Server Abrimos navegador y probamos http://localhost:5500/geoweb/index.html En VSCODE creamos la p\u00e1gina leaflet-basico.html dentro directorio geoweb A\u00f1adiremos el siguiente c\u00f3digo que es la estructura b\u00e1sica de una p\u00e1gina : 1 2 3 4 5 6 7 8 9 10 11 12 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow / head body / body / html Vamos a crear un mapa con Leaflet, para ello incluiremos en la cabecera head de una p\u00e1gina web la librer\u00eda JavaScript leaflet.js (que contiene el c\u00f3digo de la liber\u00eda) y la hoja de estilo leaflet.css (con la hoja de estilos de la librer\u00eda): 1 2 link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script Dentro de la etiqueta body encontramos el marcado para el mapa, que genera un \u00fanico elemento de documento. Tambi\u00e9n damos al contenedor un atributo id para que podamos hacer referencia a \u00e9l en nuestro c\u00f3digo: 1 2 3 body div id = map / div / body Nuestra p\u00e1gina tendria este aspecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script / head body div id = map / div / body / html A\u00f1adiremos un estilo al mapa para que ocupe toda la p\u00e1gina web, dentro la etiqueta style/ dentro del head 1 2 3 4 5 6 7 8 9 10 11 style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style Ahora nuestra p\u00e1gina tendria este aspecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style / head body div id = map / div / body / html Ahora crearemos y empezaremos a programar dentro del tag script justo encima de /head Crearemos la funci\u00f3n Init para crear un Mapa y a\u00f1adir una capa de OSM L.map es la clase central de la API. Se usa para crear y manipular el mapa. El mapa por defecto tiene dos controles: uno de zoom y uno de atribuci\u00f3n. L.map L.map Es el constructor principal de Leaflet Propiedades: https://leafletjs.com/reference-1.6.0.html#map-factory M\u00e9todos: https://leafletjs.com/reference-1.6.0.html#map-methods-for-modifying-map-state Eventos: https://leafletjs.com/reference-1.6.0.html#map-event L.tileLayer L.tileLayer Es un tipo de capa raster que se a\u00f1ade al objeto L.map Referencia: https://leafletjs.com/reference-1.6.0.html#tilelayer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 script var map , capa1 ; function init (){ map = L . map ( map ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); capa1 . addTo ( map ); } / script Llamaremos a la funci\u00f3n desde el evento onload del body 1 body onLoad = init() Leaflet b\u00e1sico 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map , capa1 ; function init (){ map = L . map ( map ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); capa1 . addTo ( map ); } / script / head body onLoad = init() div id = map / div / body / html \u00bfQue acabamos de hacer? Miramos dentro del tag script Hemos creado la variable global map Usamos L.map() para instanciar el objeto mapa, pasando el id del div d\u00f3nde ir\u00e1 el mapa Utilizamos las opciones center y zoom iniciar el mapa Tambi\u00e9n podr\u00edamos utilizar el m\u00e9todo setView 1 map =L.map( map ).setView([41.6863, 1.8382], 8);) Usamos L.tileLayer() para crear una capa base en un servidor OSM de tiles. {z}/{x}/{y}. Tambi\u00e9n pasamos algunas opciones Attribution : atribuci\u00f3n de la capa maxZoom y minZoom :niveles de zoom. Usamos m\u00e9todo addTo() para a\u00f1adir la capa al mapa Si quisieramos a\u00f1adir un punto al mapa 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ); Si quisieramos a\u00f1adir un popup al punto 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( Hola punto ); Si quisieramos que el popup estuviera abierto por defecto 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( Hola punto ). openPopup (); Lo mismo pero programando diferente 1 2 3 4 var punto = L . marker ([ 41.3954 , 2.16859 ]); punto . addTo ( map ); punto . bindPopup ( Hola punto ); punto . openPopup (); Si quiero a\u00f1adir un punto de tipo c\u00edrculo, con opciones (vector) 1 2 3 4 5 6 7 8 9 var punto = L . circleMarker ([ 41.3954 , 2.16859 ],{ color : #ffffff , fillColor : #00ff00 , fillOpacity : 0.9 , radius : 8 }); punto . addTo ( map ); punto . bindPopup ( Hola punto ); punto . openPopup (); Si quisieramos a\u00f1adir un punto con estilo al hacer clic en el mapa(Evento) 1 2 3 4 5 6 7 8 9 10 map . on ( click , function ( e ) { new L . circleMarker ( e . latlng , { color : #ffffff , fillColor : #00ff00 , fillOpacity : 0.9 , radius : 8 }). addTo ( map ) . bindPopup ( e . latlng . lat + , + e . latlng . lng ) . openPopup (); }); \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m primer ejemplo leaflet git push Ejemplo 1 Controles A\u00f1adimos controles de capas y escala. L.control.layers L.control.layers Es un control que nos permite activar y desactivar capas base (baseLayers) y \"overlays\" Referencia: https://leafletjs.com/reference-1.6.0.html#control-layers L.control.scale Es un control a\u00f1ade un escala gr\u00e1fica del mapa Referencia: https://leafletjs.com/reference-1.6.0.html#control-scale 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 html lang = es head title Ejemplo 1 Leaflet-controles / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map , osm , esri , terreno ; var controlCapas ; var controlEscala ; function init () { map = L . map ( map ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { maxZoom : 17 , minZoom : 1 , attribution : Tiles \u00a9 Esri , }). addTo ( map ); osm = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); terreno = L . tileLayer ( http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.png , { maxZoom : 19 , attribution : Stamen terrain , opacity : 0.5 }); var baseMaps = { Orto_esri : esri , Mapa_osm : osm }; var overlayMaps = { Terrain : terreno }; controlCapas = L . control . layers ( baseMaps , overlayMaps ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } / script / head body onLoad = init() / div id = map div / / body / html Pregunta \u00bfComo lo har\u00edamos para ver el control de capas abierto por defecto? Ejemplo 2 Provider \u00bfQue mapas de fondo puedo a\u00f1adir? http://leaflet-extras.github.io/leaflet-providers/preview/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 html lang = es head title Ejemplo Leaflet provider / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / style body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } / style script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script script var map , osm , controlCapas ; function init () { map = L . map ( map , { center : [ 39.6863 , 2.8382 ], zoom : 8 }); osm = L . tileLayer ( https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }). addTo ( map ); var OpenStreetMap_DE = L . tileLayer ( http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png , { attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }); var OpenStreetMap_HOT = L . tileLayer ( http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png , { attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , Tiles courtesy of a href= http://hot.openstreetmap.org/ target= _blank / Humanitarian OpenStreetMapTeam /a }); var Hydda_Base = L . tileLayer ( http://{s}.tile.openstreetmap.se/hydda/base/{z}/{x}/{y}.png , { minZoom : 0 , maxZoom : 18 , attribution : Tiles courtesy of a href= http://openstreetmap.se/ target= _blank / OpenStreetMap Sweden /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }); var Stamen_Toner = L . tileLayer ( http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com / Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 / CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 }); var Stamen_Watercolor = L . tileLayer ( http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com / Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 / CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , subdomains : abcd , minZoom : 1 , maxZoom : 16 }); var Esri_WorldStreetMap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, DeLorme, NAVTEQ, USGS,Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom,2012 }); var Esri_WorldTopoMap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap,iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, EsriChina (Hong Kong), and the GIS User Community }); var Esri_WorldImagery = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community }); var Esri_WorldShadedRelief = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri , maxZoom : 13 }); var Esri_OceanBasemap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH,CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri , maxZoom : 13 }); var mapaBase = { OSM : osm , OpenStreetMap_DE : OpenStreetMap_DE , OpenStreetMap_HOT : OpenStreetMap_HOT , Hydda_Base : Hydda_Base , Stamen_Toner : Stamen_Toner , Stamen_Watercolor : Stamen_Watercolor , Esri_WorldStreetMap : Esri_WorldStreetMap , Esri_WorldTopoMap : Esri_WorldTopoMap , Esri_WorldImagery : Esri_WorldImagery , Esri_WorldShadedRelief : Esri_WorldShadedRelief , Esri_OceanBasemap : Esri_OceanBasemap }; controlCapas = L . control . layers ( mapaBase , null ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } / script / head body onLoad = init() div id = map / div / body / html Pregunta \u00bfC\u00f3mo a\u00f1adiriamos una capa de tipo \"overlay\"? Pr\u00e1ctica Creamos un nuevo ejemplo llamado mapabase.html con tres capas \"baseLayers\" de fondo: Mapa, Orto, H\u00edbrido Truco Podemos agrupar capas utilizando L.LayerGroup https://leafletjs.com/examples/layers-control/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 var hibrid = L . layerGroup (); var Esri_WorldImagery2 = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community }). addTo ( hibrid ); var Stamen_TonerHybrid = L . tileLayer ( https://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}{r}.{ext} , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 , ext : png }). addTo ( hibrid ); Soluci\u00f3n pr\u00e1ctica 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 html lang = es head title Ejemplo Leaflet mapa base / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script style body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } / style script var map , osm , controlCapas ; function init () { map = L . map ( map , { center : [ 42.6863 , 2.8382 ], zoom : 7 }); osm = L . tileLayer ( https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }); var Esri_WorldImagery = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community }); var hibrid = L . layerGroup (); var Esri_WorldImagery2 = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community }). addTo ( hibrid ); var Stamen_TonerHybrid = L . tileLayer ( https://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}{r}.{ext} , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 , ext : png }). addTo ( hibrid ); hibrid . addTo ( map ); var mapaBase = { Mapa : osm , Foto : Esri_WorldImagery , Hibrid : hibrid }; controlCapas = L . control . layers ( mapaBase , null , { collapsed : true }); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } / script / head body onLoad = init() div id = map / div / body / html Reutilizar c\u00f3digo Cuando programamos debemos intentar NO escribir el mismo c\u00f3digo dos veces y siempre que podamos debemos reutilizarlo. Algunas t\u00e9cnicas ser\u00edan: Crear peque\u00f1as funciones lo m\u00e1s at\u00f3micas posibles Encapsular las funciones en clases o archivos *JS Encapsular los estilos en archivos *CSS Vamos a crear dentro de los directorios /geoweb/js/ el archivo mapabase.js /geoweb/css/ el archivo estilobase.css Cortamos y copiamos dentro de mapabase.js el c\u00f3digo JavaScript, est\u00e1 dentro de los tag script /script de nuestro mapabase.html Cortamos y copiamos dentro de estilobase.css el c\u00f3digo CSS, est\u00e1 dentro de los tag style /style de nuestro mapabase.html No hay que copiar los tag, solo borrarlos A\u00f1adimos los archivos creados a nuestro mapabase.html de la siguiente forma. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 html lang = es head title Ejemplo Leaflet mapa base / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script / head body onLoad = init() div id = map / div / body / html \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m mapa base leaflet git push","title":"3. Introducci\u00f3n a Leaflet"},{"location":"introduccion_a_leaflet/#introduccion","text":"","title":"Introducci\u00f3n"},{"location":"introduccion_a_leaflet/#ver-presentacion","text":"","title":"Ver presentaci\u00f3n"},{"location":"introduccion_a_leaflet/#recursos-leaflet-js","text":"","title":"Recursos Leaflet JS"},{"location":"introduccion_a_leaflet/#web","text":"http://leafletjs.com/","title":"Web"},{"location":"introduccion_a_leaflet/#api","text":"http://leafletjs.com/reference.html","title":"API"},{"location":"introduccion_a_leaflet/#plugins","text":"http://leafletjs.com/plugins.html","title":"Plugins"},{"location":"introduccion_a_leaflet/#definicion","text":"https://en.wikipedia.org/wiki/Leaflet_(software)","title":"Definici\u00f3n"},{"location":"introduccion_a_leaflet/#tutoriales","text":"http://www.digital-geography.com/category/leaflet-js/ http://leafletjs.com/examples.html http://maptimeboston.github.io/leaflet-intro/ http://asmaloney.com/2014/01/code/creating-an-interactive-map-with-leaflet-andopenstreetmap/ http://mappinggis.com/2013/06/como-crear-un-mapa-con-leaflet/","title":"Tutoriales"},{"location":"introduccion_a_leaflet/#videos","text":"https://www.youtube.com/watch?v=7Tll2k57ork https://egghead.io/lessons/javascript-get-started-with-leafletjs-mapping https://www.youtube.com/watch?v=1VYvjHb6KeM https://www.youtube.com/watch?v=TseoObyFg8E","title":"Videos"},{"location":"introduccion_a_leaflet/#descripcion","text":"Leaflet es una librer\u00eda JavaScript opensource utilizada por Flickr, Wikimedia, foursquare, OSM, carto, GIS Cloud, Washington Post, Wall Street Journal, Geocaching.com, etc. Puntos fuertes de la API de Leaflet son: Facilidad para aprender y usar Soporte m\u00f3vil HTML 5, CSS3 y pasarela WebGL Funciona tanto en los modernos como en los viejos navegadores web Muchos plugins API bien documentada","title":"Descripci\u00f3n"},{"location":"introduccion_a_leaflet/#como-empezar","text":"Si utlizamos VSCODE , instalamos extensi\u00f3n Live Server View -- Extensions Descargamos geoweb.zip y descomprimir dentro de nuestro directorio geoweb del servidor web Dentro de VSCODE seleccionamos index.html -- Bot\u00f3n derecho mouse -- Open with Live Server Abrimos navegador y probamos http://localhost:5500/geoweb/index.html En VSCODE creamos la p\u00e1gina leaflet-basico.html dentro directorio geoweb A\u00f1adiremos el siguiente c\u00f3digo que es la estructura b\u00e1sica de una p\u00e1gina : 1 2 3 4 5 6 7 8 9 10 11 12 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow / head body / body / html Vamos a crear un mapa con Leaflet, para ello incluiremos en la cabecera head de una p\u00e1gina web la librer\u00eda JavaScript leaflet.js (que contiene el c\u00f3digo de la liber\u00eda) y la hoja de estilo leaflet.css (con la hoja de estilos de la librer\u00eda): 1 2 link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script Dentro de la etiqueta body encontramos el marcado para el mapa, que genera un \u00fanico elemento de documento. Tambi\u00e9n damos al contenedor un atributo id para que podamos hacer referencia a \u00e9l en nuestro c\u00f3digo: 1 2 3 body div id = map / div / body Nuestra p\u00e1gina tendria este aspecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script / head body div id = map / div / body / html A\u00f1adiremos un estilo al mapa para que ocupe toda la p\u00e1gina web, dentro la etiqueta style/ dentro del head 1 2 3 4 5 6 7 8 9 10 11 style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style Ahora nuestra p\u00e1gina tendria este aspecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style / head body div id = map / div / body / html Ahora crearemos y empezaremos a programar dentro del tag script justo encima de /head Crearemos la funci\u00f3n Init para crear un Mapa y a\u00f1adir una capa de OSM L.map es la clase central de la API. Se usa para crear y manipular el mapa. El mapa por defecto tiene dos controles: uno de zoom y uno de atribuci\u00f3n. L.map","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_leaflet/#lmap","text":"Es el constructor principal de Leaflet Propiedades: https://leafletjs.com/reference-1.6.0.html#map-factory M\u00e9todos: https://leafletjs.com/reference-1.6.0.html#map-methods-for-modifying-map-state Eventos: https://leafletjs.com/reference-1.6.0.html#map-event L.tileLayer","title":"L.map"},{"location":"introduccion_a_leaflet/#ltilelayer","text":"Es un tipo de capa raster que se a\u00f1ade al objeto L.map Referencia: https://leafletjs.com/reference-1.6.0.html#tilelayer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 script var map , capa1 ; function init (){ map = L . map ( map ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); capa1 . addTo ( map ); } / script Llamaremos a la funci\u00f3n desde el evento onload del body 1 body onLoad = init()","title":"L.tileLayer"},{"location":"introduccion_a_leaflet/#leaflet-basico","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 html lang = es head title Leaflet b\u00e1sico / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map , capa1 ; function init (){ map = L . map ( map ,{ center : [ 41.6863 , 1.8382 ], zoom : 8 }); capa1 = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); capa1 . addTo ( map ); } / script / head body onLoad = init() div id = map / div / body / html \u00bfQue acabamos de hacer? Miramos dentro del tag script Hemos creado la variable global map Usamos L.map() para instanciar el objeto mapa, pasando el id del div d\u00f3nde ir\u00e1 el mapa Utilizamos las opciones center y zoom iniciar el mapa Tambi\u00e9n podr\u00edamos utilizar el m\u00e9todo setView 1 map =L.map( map ).setView([41.6863, 1.8382], 8);) Usamos L.tileLayer() para crear una capa base en un servidor OSM de tiles. {z}/{x}/{y}. Tambi\u00e9n pasamos algunas opciones Attribution : atribuci\u00f3n de la capa maxZoom y minZoom :niveles de zoom. Usamos m\u00e9todo addTo() para a\u00f1adir la capa al mapa Si quisieramos a\u00f1adir un punto al mapa 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ); Si quisieramos a\u00f1adir un popup al punto 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( Hola punto ); Si quisieramos que el popup estuviera abierto por defecto 1 L . marker ([ 41.3954 , 2.16859 ]). addTo ( map ). bindPopup ( Hola punto ). openPopup (); Lo mismo pero programando diferente 1 2 3 4 var punto = L . marker ([ 41.3954 , 2.16859 ]); punto . addTo ( map ); punto . bindPopup ( Hola punto ); punto . openPopup (); Si quiero a\u00f1adir un punto de tipo c\u00edrculo, con opciones (vector) 1 2 3 4 5 6 7 8 9 var punto = L . circleMarker ([ 41.3954 , 2.16859 ],{ color : #ffffff , fillColor : #00ff00 , fillOpacity : 0.9 , radius : 8 }); punto . addTo ( map ); punto . bindPopup ( Hola punto ); punto . openPopup (); Si quisieramos a\u00f1adir un punto con estilo al hacer clic en el mapa(Evento) 1 2 3 4 5 6 7 8 9 10 map . on ( click , function ( e ) { new L . circleMarker ( e . latlng , { color : #ffffff , fillColor : #00ff00 , fillOpacity : 0.9 , radius : 8 }). addTo ( map ) . bindPopup ( e . latlng . lat + , + e . latlng . lng ) . openPopup (); }); \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m primer ejemplo leaflet git push","title":"Leaflet b\u00e1sico"},{"location":"introduccion_a_leaflet/#ejemplo-1-controles","text":"A\u00f1adimos controles de capas y escala. L.control.layers","title":"Ejemplo 1 Controles"},{"location":"introduccion_a_leaflet/#lcontrollayers","text":"Es un control que nos permite activar y desactivar capas base (baseLayers) y \"overlays\" Referencia: https://leafletjs.com/reference-1.6.0.html#control-layers","title":"L.control.layers"},{"location":"introduccion_a_leaflet/#lcontrolscale","text":"Es un control a\u00f1ade un escala gr\u00e1fica del mapa Referencia: https://leafletjs.com/reference-1.6.0.html#control-scale 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 html lang = es head title Ejemplo 1 Leaflet-controles / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map , osm , esri , terreno ; var controlCapas ; var controlEscala ; function init () { map = L . map ( map ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { maxZoom : 17 , minZoom : 1 , attribution : Tiles \u00a9 Esri , }). addTo ( map ); osm = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }); terreno = L . tileLayer ( http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.png , { maxZoom : 19 , attribution : Stamen terrain , opacity : 0.5 }); var baseMaps = { Orto_esri : esri , Mapa_osm : osm }; var overlayMaps = { Terrain : terreno }; controlCapas = L . control . layers ( baseMaps , overlayMaps ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } / script / head body onLoad = init() / div id = map div / / body / html Pregunta","title":"L.control.scale"},{"location":"introduccion_a_leaflet/#ejemplo-2-provider","text":"\u00bfQue mapas de fondo puedo a\u00f1adir? http://leaflet-extras.github.io/leaflet-providers/preview/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 html lang = es head title Ejemplo Leaflet provider / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://unpkg.com/leaflet@1.6.0/dist/leaflet.css / style body { margin : 0 ; } # map { height : 100 % ; width : 100 % ; background-color : #ffffff } / style script src = https://unpkg.com/leaflet@1.6.0/dist/leaflet.js / script script var map , osm , controlCapas ; function init () { map = L . map ( map , { center : [ 39.6863 , 2.8382 ], zoom : 8 }); osm = L . tileLayer ( https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }). addTo ( map ); var OpenStreetMap_DE = L . tileLayer ( http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png , { attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }); var OpenStreetMap_HOT = L . tileLayer ( http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png , { attribution : copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , Tiles courtesy of a href= http://hot.openstreetmap.org/ target= _blank / Humanitarian OpenStreetMapTeam /a }); var Hydda_Base = L . tileLayer ( http://{s}.tile.openstreetmap.se/hydda/base/{z}/{x}/{y}.png , { minZoom : 0 , maxZoom : 18 , attribution : Tiles courtesy of a href= http://openstreetmap.se/ target= _blank / OpenStreetMap Sweden /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a }); var Stamen_Toner = L . tileLayer ( http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com / Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 / CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 }); var Stamen_Watercolor = L . tileLayer ( http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com / Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 / CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright / OpenStreetMap /a , subdomains : abcd , minZoom : 1 , maxZoom : 16 }); var Esri_WorldStreetMap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, DeLorme, NAVTEQ, USGS,Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom,2012 }); var Esri_WorldTopoMap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap,iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, EsriChina (Hong Kong), and the GIS User Community }); var Esri_WorldImagery = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri, i-cubed, USDA, USGS, AEX,GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community }); var Esri_WorldShadedRelief = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Shaded_Relief/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Source: Esri , maxZoom : 13 }); var Esri_OceanBasemap = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x} , { attribution : Tiles copy; Esri mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH,CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri , maxZoom : 13 }); var mapaBase = { OSM : osm , OpenStreetMap_DE : OpenStreetMap_DE , OpenStreetMap_HOT : OpenStreetMap_HOT , Hydda_Base : Hydda_Base , Stamen_Toner : Stamen_Toner , Stamen_Watercolor : Stamen_Watercolor , Esri_WorldStreetMap : Esri_WorldStreetMap , Esri_WorldTopoMap : Esri_WorldTopoMap , Esri_WorldImagery : Esri_WorldImagery , Esri_WorldShadedRelief : Esri_WorldShadedRelief , Esri_OceanBasemap : Esri_OceanBasemap }; controlCapas = L . control . layers ( mapaBase , null ); controlCapas . addTo ( map ); controlEscala = L . control . scale (); controlEscala . addTo ( map ); } / script / head body onLoad = init() div id = map / div / body / html Pregunta","title":"Ejemplo 2 Provider"},{"location":"introduccion_a_leaflet/#practica","text":"Creamos un nuevo ejemplo llamado mapabase.html con tres capas \"baseLayers\" de fondo: Mapa, Orto, H\u00edbrido Truco","title":"Pr\u00e1ctica"},{"location":"introduccion_a_leaflet/#reutilizar-codigo","text":"Cuando programamos debemos intentar NO escribir el mismo c\u00f3digo dos veces y siempre que podamos debemos reutilizarlo. Algunas t\u00e9cnicas ser\u00edan: Crear peque\u00f1as funciones lo m\u00e1s at\u00f3micas posibles Encapsular las funciones en clases o archivos *JS Encapsular los estilos en archivos *CSS Vamos a crear dentro de los directorios /geoweb/js/ el archivo mapabase.js /geoweb/css/ el archivo estilobase.css Cortamos y copiamos dentro de mapabase.js el c\u00f3digo JavaScript, est\u00e1 dentro de los tag script /script de nuestro mapabase.html Cortamos y copiamos dentro de estilobase.css el c\u00f3digo CSS, est\u00e1 dentro de los tag style /style de nuestro mapabase.html No hay que copiar los tag, solo borrarlos A\u00f1adimos los archivos creados a nuestro mapabase.html de la siguiente forma. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 html lang = es head title Ejemplo Leaflet mapa base / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script / head body onLoad = init() div id = map / div / body / html \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m mapa base leaflet git push","title":"Reutilizar c\u00f3digo"},{"location":"introduccion_a_mapbox/","text":"Web https://www.mapbox.com/ Productos https://www.mapbox.com/products/ APIs https://www.mapbox.com/api-documentation/ P\u00e1gina refer\u00e9ncia MapBox GL!! https://www.mapbox.com/mapbox-gl-js/api/ GitHUB https://github.com/mapbox Tutoriales https://www.mapbox.com/mapbox-gl-js/example/simple-map/ https://www.mapbox.com/help/tutorials/ https://www.mapbox.com/help/studio-manual/ https://ovrdc.github.io/gis-tutorials/mapbox/ Videos https://www.youtube.com/watch?v=jrnoFU5Wkdo https://www.youtube.com/watch?v=Zn3Xx-TSrM8 https://www.youtube.com/watch?v=r6Ij_34xTD0 https://www.youtube.com/watch?v=YhynsA9_fPc Descripci\u00f3n MapxBox es una empresa privada que ofrece una plataforma para la publicac\u00f3n de mapas. Mapbox destaca por creado de forma abierta MBTiles Vector Tiles MapBox GL \u00bfC\u00f3mo empezar? Vamos a realizar un ejercicio d\u00f3ne veremos como funciona MapBox Studio, Vector Tiles y Mapbox GL Crearemos un mapa personalizado Nos damos de alta en MapBox 1.Mapa personalizado Creamos nuestor propio estilo Entramos en MapBox.com Studio -- Styles -- New style Seleccionamos un estilo como base y cambiamos colores Publish your style Share, develop, and use your style -- Copiamos Style URL y Access token Visualizar estilo propio con Mapbox gl Creamos Mapbox-estilo.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 html head meta charset = utf-8 / title Mapbox estilo / title meta name = viewport content = initial-scale=1,maximum-scale=1,user-scalable=no / script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css rel = stylesheet / style body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } / style script //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA ; var map = new mapboxgl . Map ({ container : map , style : mapbox://styles/gismasterm2/cjqg9p2lm00442rqm4vlk89rt , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } / script / head body onload = init() div id = map / div / body / html 2.Crear un Tileset o capa de datos pr\u00f3pios Paso 1 Descargamos en formato CSV los accidentes en [ http://opendata-ajuntament.barcelona.cat/data/es/dataset/accidents-tipus-gu-bcn \" http://opendata-ajuntament.barcelona.cat/data/es/dataset/accidents-tipus-gu-bcn ) Utilizamos QGIS para visualizar y convertir a formato GeoJSON en EPSG:4326 --accidentes2017.geojson Paso 2 -A\u00f1adimos accidentes2017.geojson a Mapbox.com Entramos en MapBox.com Studio Tilesets New tileset Arrastramos accidentes2017.geojson Copiamos nuestro Mapa Id Share, develop, and use your style -- Copiamos Style URL y Access token Visualizar nuestor propio Tileset Creamos Mapbox-accidentes.html Ejemplo Accidentes Barcelona Note Probamos :A\u00f1adir opci\u00f3n para ver todos los accidentes 3.A\u00f1adir estilos (ICGC) y capas externas (GeoJSON) Podemos trabajar con la libreria JS de Mapbox sin utilizar sus estilos , servicios ni app Tokens OpenICGC Presenta estilos y bases Vector Tiles mundiales d\u00f3nde fusiona datos OSM y del ICGC en un esquema de OpenMapTiles https://openicgc.github.io/ Mapa de carriles bici con estilo Hibrid Seleccionaremos el estilo Hibrid de OpenICGC Copiaremos el archivo carriles bici dentro de geoweb Creamos archivo mapbox-icgc.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 html head meta charset = utf-8 / title Carriles bici BCN / title meta name = viewport content = initial-scale=1,maximum-scale=1,user-scalable=no / script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css rel = stylesheet / style body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } / style script function Init () { mapboxgl . accessToken = ; var map = new mapboxgl . Map ({ container : map , style : https://geoserveis.icgc.cat/contextmaps/hibrid.json , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( load , function () { map . addSource ( carrils-bici , { type : geojson , data : datos/carrils-bici.geojson }); //fin map source map . addLayer ({ id : carrils-bici-layer , type : line , source : carrils-bici , layout : { line-join : round , line-cap : round }, paint : { line-color : #FF0000 , line-width : 8 } }); //fin add layers }); //Fin load mapa } / script / head body onload = Init() div id = map / div / body / html Note Probamos :Cambiar color carriles y estilo de fondo Warning Pr\u00e1ctica Cementrio. Puntuable!! Creamos nuevo estilo en Mapbox.com Cargamos capas datos/constru_cementerio.geojson y datos/cementerio.geojson A\u00f1adimos como tileset en MapxBox Integramos el tileset dentro nuestro estilo creado Menu Add Tileset to Style Editamos capas Creamos visor ejemplo mapbox-cementerio.html Extra: Visualizar estilo Mapbox en Leaflet 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 html lang = es head title Leaflet y Mapox / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.0/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map ; var capa1 ; function init () { map = L . map ( map , { center : [ 41.6863 , 1.8382 ], zoom : 8 , attributionControl : false }); // subtituir por vuestra layer capa1 = L . tileLayer ( https://api.mapbox.com/styles/v1/gismasterm2/cjcumodeg0i4p2rpaihqxx96w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA , { maxZoom : 19 , minZoom : 1 , attribution : Mapbox }); capa1 . addTo ( map ); } / script / head body onload = init() div id = map / div / body / html Servicio GeoNames y Leaflet Geonames.org es una web que nos ofrece hasta 34 servicios geogr\u00e1ficos Nos damos de Alta en GeoNanmes Crearemos el archivo geonames-terremotos.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 html head lang = es title GeoNames / title meta http-equiv = Content-Type content = text/html; charset=UTF-8 meta name = viewport content = width=device-width, initial-scale=1 link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.4.0/leaflet.css script src = https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js / script script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.4.0/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } # ventana { position : absolute ; top : 100 px ; left : 10 px ; z-index : 1000 ; } / style / head body div id = map / div script var terremotoPunto = null ; var map ; $ ( document ). ready ( function () { map = L . map ( map , { attributionControl : false , zoom : 8 , center : [ 42 , 2 ] }); L . tileLayer ( //{s}.tile.stamen.com/toner-lite/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a \u2014 Map data \u00a9 a href= http://openstreetmap.org OpenStreetMap /a contributors, a href= http://creativecommons.org/licenses/by-sa/2.0/ CC-BY-SA /a , subdomains : abcd , maxZoom : 17 , minZoom : 2 }). addTo ( map ); function peticionTerremotos () { var peticion = http://api.geonames.org/earthquakesJSON? + north= + map . getBounds (). _northEast . lat + + south= + map . getBounds (). _southWest . lat + + east= + map . getBounds (). _northEast . lng + + west= + map . getBounds (). _southWest . lng + + maxRows=50 + username=masterupc ; $ . ajax ({ url : peticion , method : GET , dataType : jsonp , success : function ( respuesta ) { respuestaTerremotos ( respuesta ); } }); //fin ajax } //fin peticion function respuestaTerremotos ( respuesta ) { if ( respuesta == null ) { return ; } else { if ( terremotoPunto ) { map . eachLayer ( function ( layer ) { if ( layer . _radius ) { map . removeLayer ( layer ); } }); } var total_terremotos = respuesta . earthquakes ; for ( var i = 0 ; i total_terremotos . length ; i ++ ) { var terremoto = total_terremotos [ i ]; terremotoPunto = new L . circleMarker ([ terremoto . lat , terremoto . lng ], { radius : parseInt ( terremoto . magnitude * 2 ), fillColor : #aa0808 , color : #ffffff , weight : 2 , opacity : 1 , fillOpacity : 0.8 }); terremotoPunto . bindPopup ( Mg: + terremoto . magnitude + br + terremoto . datetime ); terremotoPunto . addTo ( map ); } } } //Fin respuesta terremotos peticionTerremotos (); map . on ( moveend , function () { peticionTerremotos (); }); }); //fin document ready / script / body / html","title":"Introduccion a mapbox"},{"location":"introduccion_a_mapbox/#web","text":"https://www.mapbox.com/","title":"Web"},{"location":"introduccion_a_mapbox/#productos","text":"https://www.mapbox.com/products/","title":"Productos"},{"location":"introduccion_a_mapbox/#apis","text":"https://www.mapbox.com/api-documentation/","title":"APIs"},{"location":"introduccion_a_mapbox/#pagina-referencia-mapbox-gl","text":"https://www.mapbox.com/mapbox-gl-js/api/","title":"P\u00e1gina refer\u00e9ncia MapBox GL!!"},{"location":"introduccion_a_mapbox/#github","text":"https://github.com/mapbox","title":"GitHUB"},{"location":"introduccion_a_mapbox/#tutoriales","text":"https://www.mapbox.com/mapbox-gl-js/example/simple-map/ https://www.mapbox.com/help/tutorials/ https://www.mapbox.com/help/studio-manual/ https://ovrdc.github.io/gis-tutorials/mapbox/","title":"Tutoriales"},{"location":"introduccion_a_mapbox/#videos","text":"https://www.youtube.com/watch?v=jrnoFU5Wkdo https://www.youtube.com/watch?v=Zn3Xx-TSrM8 https://www.youtube.com/watch?v=r6Ij_34xTD0 https://www.youtube.com/watch?v=YhynsA9_fPc","title":"Videos"},{"location":"introduccion_a_mapbox/#descripcion","text":"MapxBox es una empresa privada que ofrece una plataforma para la publicac\u00f3n de mapas. Mapbox destaca por creado de forma abierta MBTiles Vector Tiles MapBox GL","title":"Descripci\u00f3n"},{"location":"introduccion_a_mapbox/#como-empezar","text":"Vamos a realizar un ejercicio d\u00f3ne veremos como funciona MapBox Studio, Vector Tiles y Mapbox GL Crearemos un mapa personalizado Nos damos de alta en MapBox","title":"\u00bfC\u00f3mo empezar?"},{"location":"introduccion_a_mapbox/#1mapa-personalizado","text":"","title":"1.Mapa personalizado"},{"location":"introduccion_a_mapbox/#creamos-nuestor-propio-estilo","text":"Entramos en MapBox.com Studio -- Styles -- New style Seleccionamos un estilo como base y cambiamos colores Publish your style Share, develop, and use your style -- Copiamos Style URL y Access token","title":"Creamos nuestor propio estilo"},{"location":"introduccion_a_mapbox/#visualizar-estilo-propio-con-mapbox-gl","text":"Creamos Mapbox-estilo.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 html head meta charset = utf-8 / title Mapbox estilo / title meta name = viewport content = initial-scale=1,maximum-scale=1,user-scalable=no / script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css rel = stylesheet / style body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } / style script //A\u00f1adir vuestor token y vuestro estilo function init () { mapboxgl . accessToken = pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA ; var map = new mapboxgl . Map ({ container : map , style : mapbox://styles/gismasterm2/cjqg9p2lm00442rqm4vlk89rt , center : [ 2.16859 , 41.3954 ], zoom : 13 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); } / script / head body onload = init() div id = map / div / body / html","title":"Visualizar estilo propio con Mapbox gl"},{"location":"introduccion_a_mapbox/#2crear-un-tileset-o-capa-de-datos-propios","text":"","title":"2.Crear un Tileset o capa de datos pr\u00f3pios"},{"location":"introduccion_a_mapbox/#paso-1","text":"Descargamos en formato CSV los accidentes en [ http://opendata-ajuntament.barcelona.cat/data/es/dataset/accidents-tipus-gu-bcn \" http://opendata-ajuntament.barcelona.cat/data/es/dataset/accidents-tipus-gu-bcn ) Utilizamos QGIS para visualizar y convertir a formato GeoJSON en EPSG:4326 --accidentes2017.geojson","title":"Paso 1"},{"location":"introduccion_a_mapbox/#paso-2-anadimos-accidentes2017geojson-a-mapboxcom","text":"Entramos en MapBox.com Studio Tilesets New tileset Arrastramos accidentes2017.geojson Copiamos nuestro Mapa Id Share, develop, and use your style -- Copiamos Style URL y Access token","title":"Paso 2 -A\u00f1adimos accidentes2017.geojson a Mapbox.com"},{"location":"introduccion_a_mapbox/#visualizar-nuestor-propio-tileset","text":"Creamos Mapbox-accidentes.html Ejemplo Accidentes Barcelona Note Probamos :A\u00f1adir opci\u00f3n para ver todos los accidentes","title":"Visualizar nuestor propio Tileset"},{"location":"introduccion_a_mapbox/#3anadir-estilos-icgc-y-capas-externas-geojson","text":"Podemos trabajar con la libreria JS de Mapbox sin utilizar sus estilos , servicios ni app Tokens","title":"3.A\u00f1adir estilos (ICGC) y capas externas (GeoJSON)"},{"location":"introduccion_a_mapbox/#openicgc","text":"Presenta estilos y bases Vector Tiles mundiales d\u00f3nde fusiona datos OSM y del ICGC en un esquema de OpenMapTiles https://openicgc.github.io/","title":"OpenICGC"},{"location":"introduccion_a_mapbox/#mapa-de-carriles-bici-con-estilo-hibrid","text":"Seleccionaremos el estilo Hibrid de OpenICGC Copiaremos el archivo carriles bici dentro de geoweb Creamos archivo mapbox-icgc.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 html head meta charset = utf-8 / title Carriles bici BCN / title meta name = viewport content = initial-scale=1,maximum-scale=1,user-scalable=no / script src = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js / script link href = https://api.tiles.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css rel = stylesheet / style body { margin : 0 ; padding : 0 ; } # map { position : absolute ; top : 0 ; bottom : 0 ; width : 100 % ; height : 100 % } / style script function Init () { mapboxgl . accessToken = ; var map = new mapboxgl . Map ({ container : map , style : https://geoserveis.icgc.cat/contextmaps/hibrid.json , center : [ 2.16859 , 41.3954 ], zoom : 13 , hash : true , pitch : 45 , attributionControl : false }); map . addControl ( new mapboxgl . AttributionControl ({ compact : true })); map . addControl ( new mapboxgl . NavigationControl ()); map . on ( load , function () { map . addSource ( carrils-bici , { type : geojson , data : datos/carrils-bici.geojson }); //fin map source map . addLayer ({ id : carrils-bici-layer , type : line , source : carrils-bici , layout : { line-join : round , line-cap : round }, paint : { line-color : #FF0000 , line-width : 8 } }); //fin add layers }); //Fin load mapa } / script / head body onload = Init() div id = map / div / body / html Note Probamos :Cambiar color carriles y estilo de fondo Warning","title":"Mapa de carriles bici con estilo Hibrid"},{"location":"introduccion_a_mapbox/#practica-cementrio-puntuable","text":"Creamos nuevo estilo en Mapbox.com Cargamos capas datos/constru_cementerio.geojson y datos/cementerio.geojson A\u00f1adimos como tileset en MapxBox Integramos el tileset dentro nuestro estilo creado Menu Add Tileset to Style Editamos capas Creamos visor ejemplo mapbox-cementerio.html","title":"Pr\u00e1ctica Cementrio. Puntuable!!"},{"location":"introduccion_a_mapbox/#extra-visualizar-estilo-mapbox-en-leaflet","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 html lang = es head title Leaflet y Mapox / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina meta name = robots content = index,follow link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.0/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } / style script var map ; var capa1 ; function init () { map = L . map ( map , { center : [ 41.6863 , 1.8382 ], zoom : 8 , attributionControl : false }); // subtituir por vuestra layer capa1 = L . tileLayer ( https://api.mapbox.com/styles/v1/gismasterm2/cjcumodeg0i4p2rpaihqxx96w/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZ2lzbWFzdGVybTIiLCJhIjoiY2plZHhubTQxMTNoYzMza3Rqa3kxYTdrOCJ9.53B1E6mKD_EQOVb2Y0-SsA , { maxZoom : 19 , minZoom : 1 , attribution : Mapbox }); capa1 . addTo ( map ); } / script / head body onload = init() div id = map / div / body / html","title":"Extra: Visualizar estilo Mapbox en Leaflet"},{"location":"introduccion_a_mapbox/#servicio-geonames-y-leaflet","text":"Geonames.org es una web que nos ofrece hasta 34 servicios geogr\u00e1ficos Nos damos de Alta en GeoNanmes Crearemos el archivo geonames-terremotos.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 html head lang = es title GeoNames / title meta http-equiv = Content-Type content = text/html; charset=UTF-8 meta name = viewport content = width=device-width, initial-scale=1 link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.4.0/leaflet.css script src = https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js / script script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.4.0/leaflet.js / script style body { margin : 0 ; padding : 0 ; overflow : hidden ; } # map { height : 100 % ; width : 100 % ; } # ventana { position : absolute ; top : 100 px ; left : 10 px ; z-index : 1000 ; } / style / head body div id = map / div script var terremotoPunto = null ; var map ; $ ( document ). ready ( function () { map = L . map ( map , { attributionControl : false , zoom : 8 , center : [ 42 , 2 ] }); L . tileLayer ( //{s}.tile.stamen.com/toner-lite/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a \u2014 Map data \u00a9 a href= http://openstreetmap.org OpenStreetMap /a contributors, a href= http://creativecommons.org/licenses/by-sa/2.0/ CC-BY-SA /a , subdomains : abcd , maxZoom : 17 , minZoom : 2 }). addTo ( map ); function peticionTerremotos () { var peticion = http://api.geonames.org/earthquakesJSON? + north= + map . getBounds (). _northEast . lat + + south= + map . getBounds (). _southWest . lat + + east= + map . getBounds (). _northEast . lng + + west= + map . getBounds (). _southWest . lng + + maxRows=50 + username=masterupc ; $ . ajax ({ url : peticion , method : GET , dataType : jsonp , success : function ( respuesta ) { respuestaTerremotos ( respuesta ); } }); //fin ajax } //fin peticion function respuestaTerremotos ( respuesta ) { if ( respuesta == null ) { return ; } else { if ( terremotoPunto ) { map . eachLayer ( function ( layer ) { if ( layer . _radius ) { map . removeLayer ( layer ); } }); } var total_terremotos = respuesta . earthquakes ; for ( var i = 0 ; i total_terremotos . length ; i ++ ) { var terremoto = total_terremotos [ i ]; terremotoPunto = new L . circleMarker ([ terremoto . lat , terremoto . lng ], { radius : parseInt ( terremoto . magnitude * 2 ), fillColor : #aa0808 , color : #ffffff , weight : 2 , opacity : 1 , fillOpacity : 0.8 }); terremotoPunto . bindPopup ( Mg: + terremoto . magnitude + br + terremoto . datetime ); terremotoPunto . addTo ( map ); } } } //Fin respuesta terremotos peticionTerremotos (); map . on ( moveend , function () { peticionTerremotos (); }); }); //fin document ready / script / body / html","title":"Servicio GeoNames y Leaflet"},{"location":"introduccion_a_vector_tiles/","text":"Introducci\u00f3n a Vector Tiles y Mapbox (I) Vector Tiles es un formato para almacenar datos geogr\u00e1ficos en formato binario (Google Protobuf) y pensados para la visualizaci\u00f3n en navegadores web modernos que soporten webGL. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (XYZ,WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos. Contexto En 2005 GoogleMaps introdujo una \"nueva\" forma de mostrar datos geogr\u00e1ficos por la web, pregenerando el mapa por niveles de zoom y tiles (teselas) de 256x256 pixeles. Tambi\u00e9n cre\u00f3 una nueva proyecci\u00f3n basada en mercator, llamada pseude-mercator o web mercator , cuyo c\u00f3digo EPSG es 3857 Despu\u00e9s de GoogleMaps, otros proveedores o plataformas c\u00f3mo OpenStreetMap siguen esta misma forma de organizar la geoinformaci\u00f3n. HTTP Para cargar la im\u00e1genes se ulitza una llamada HTTP rest d\u00f3nde se especifica; https://.../.../z/x/y.format Z= Nivel de zoom X=coordenada X Y=coordenada Y Formato Raster: Im\u00e1gen png o JPEG Vector: (pbf o mvt) Protocolos Existen tres especificaciones para servir tiles TMS (Tile Map Service): X Y coordenadas empiezan de debajo izquierda (t\u00edpico eje cartesiano de coordenadas) WMTS (Web Map Tile Service): OGC estandard , corrdenadas empiezan de arriba izquierda. ZXY o \"slippy map\": Igual que TMS pero la Y empieza por arriba izquierda Caracteristicas Las teselas vectoriales han sido utilizadas por el cliente Android de Google Maps desde diciembre de 2010 y en el cliente de escritorio desde 2013. Las teselas vectoriales para renderizar los datos de OpenStreetMap se propusieron por primera vez en marzo de 2013 y est\u00e1n soportadas por Mapnik, el renderizador de datos de OpenStreetMap m\u00e1s utilizado. Mapbox, proveedor comercial de herramientas de cartograf\u00eda personalizada y de hosting, es el m\u00e1xini impulsor de esta tecnologia y ha centrado su herramienta de cartograf\u00eda, Mapbox Studio, en torno a las teselas vectoriales. Cada tile es un contenedor de datos vectores y atributos Los Tiles no tienen estilo, el estilo se aplica en cliente Soporta rotaci\u00f3n y orientaci\u00f3n Soporta extrusi\u00f3n y 3D Herramientas y recursos Fuente: https://github.com/mapbox/awesome-vector-tiles Parsers Generators vector-tile-js - Parses vector tiles with JavaScript. mapnik-vector-tile - C++ vector tile read/write implementation on top of Mapnik. mbtiles-cpp - C++ library for decoding of mbtiles and vector data into function callbacks. vector-tile-py - Python tool to convert a Mapnik vector tile to GeoJSON node-mapnik - Node.js API for vector tiles which depends on mapnik-vector-tile vector-tile-cs - Parses vector tiles with C# (native C# implementation, no dependencies). mapbox-vector-tile-cs - Parses vector tiles with C# (uses protobuf-net). tilelive-bridge - Implements Tilelive API for creating vector tiles from traditional Mapnik datasources in Node.js. tilelive-vector - Implements Tilelive API for reading vector tiles and rendering to image tiles in Node.js. mapbox-vector-tile is a Python package for vector tile encoding. Used in Mapzen's vector tile service tileserver and TileStache. :warning: Only support V1 Tile spec and not V2, no longer maintained geojson-vt - Slice GeoJSON into vector tiles on the fly in the browser. java-vector-tile - A java encoder and decoder for vector tiles. mapbox-vector-tile-java - Encode and decode v2.1 Mapbox Vector Tiles. Convert JTS Geometry to and from MVT features, including simple user data support. Utility functions for converting world coordinates to MVT coordinates and clipping to a tile envelope. cached-vector-tile - An alternative implementation of the vector-tile-js interface, backed by plain JS objects/arrays rather than parsed-on-demand protobuf data. Trades away memory efficiency for faster feature.loadGeometry() calls. tilegrinder - A helper library for applying a data altering function on each vector tile in an MBTiles, using the native protobuf wrapper for de- and encoding, recompressing the results and storing them either in an MBTiles or as single files. SwiftVectorTiles - A Swift encoder for vector tiles according to the Mapbox vector tile spec. orb - A Go geometry library with mvt - geojson support. Clients Mapbox GL Native - C++/OpenGL vector maps library with native SDKs for Android, iOS, Node.js, macOS, and Qt Mapbox GL JS - JavaScript/WebGL vector maps library. OpenLayers 3 - JavaScript vector raster library. WhirlyGlobe/Maply - Objective C code that is able to read and render vector tiles(and style with mapnik xml) on iOS devices. Leaflet.MapboxVectorTile is able to read PBF MapboxVectorTiles from a REST endpoint and render them as a TileLayer on a Leaflet Map. Use this option if you want to utilize vector tiles on a standard Leaflet web map without needing WebGL. CARTO Mobile SDK - C++ maps library focused on offline features, for iOS, Android, Windows Phone and Xamarin with bindings for Java, Objective-C and C#. Based on Nutiteq Maps SDK , but open source and uses CartoCSS. Mapzen Tangram - JavaScript library for rendering 2D 3D maps live in a web browser with WebGL, supports MVT, GeoJSON, TopoJSON Mapzen Tangram-es - C++ library for rendering 2D and 3D maps using OpenGL ES 2 with custom styling and interactions mapbox-gl-leaflet - Create Mapbox GL layers in Leaflet react-native-mapbox-gl - Render Mapbox GL maps from React applications hoverboard - Render vector tiles on canvas with Leaflet 0.7.x (supports GeoJSON, TopoJSON, and protobuf) :warning: no longer maintained Leaflet.VectorGrid - Display gridded vector data (sliced GeoJSON, TopoJSON or Mapbox Vector Tiles) in Leaflet 1.0.0 ArcGIS API for JavaScript - Draw vector tile layers as part of your web map. Rendering done via mapbox-gl-js integration. mapscii - A Vector Tile to Braille and ASCII renderer for xterm-compatible terminals Unofficial Mapbox GL Native bindings for Qt QML - Qt QML bindings for Qt 5.6 and higher. Mapbox-vector-tiles-basic-js-renderer - A fork of mapbox-gl-js giving you full control over rendering of specific tiles, also provides vector tile overlay for google maps. Applications / Command line tools Mapbox Studio - Web design studio for creating and styling vector tiles. Mapbox Studio Classic - Desktop design studio for both creating vector tiles from raw geodata and for rendering them on-the-fly into image tiles. Internally uses tilelive.js modules to handle vector tiles (see tilelive-bridge and tilelive-vector ) :warning: use Mapbox Studio instead. kosmtik - Design maps with CartoCSS and Mapnik. ArcGIS Pro - Generate vector tiles from maps authored in ArcGIS Pro or imported from ArcMap. MVT Styler - map style editor for vector tiles. Maputnik - A visual style editor for the Mapbox GL style specification. QGIS Vector Tiles Reader - QGIS Python plugin which reads Mapbox Vector Tiles from local MBTiles file or remote mapbox-gl-inspect - Plugin for Mapbox GL JS to view the view and inspect VT features. CLI Utilities mbview - Watch MBTiles in your localhost. View tiles in a basic Mapbox GL JS webapp locally tippecanoe - Build vector tilesets from large collections of GeoJSON features. tilemaker - Command line tool to produce vector tiles directly from an .osm.pbf extract without an intermediate database. mapbox-filter - Filter MBTiles according to Mapbox GL JS styles, shrink MBTiles directly, serve locally over http, publish to S3-compatibile storage vector-tiles-producer Command line tool in C++ to creates vector tiles for a given area at chosen zoom levels using a Mapnik XML. :warning: no longer maintained vt-geojson - decodes vector tiles to GeoJSON FeatureCollections tl - An alternate command line interface to tilelive tileshrink - Reduce the layer extent and simplify the resulting geometries of all vector tiles in an MBTiles tiler @GeoVation - Command line tool for converting GeoJSON, Shapefiles or PostGIS layer to raw Vector Tiles (or MBTiles) tiler @thomersch - Command line tool to convert GeoJSON to Vector Tiles (written in Go language). geojson2mvt - npm package for building a static vector tile tree for given xyz bounds from a geojson file (uses geojson-vt ) OGR MVT and MBTiles - The GDAL/OGR MVT and MBTILES drivers can be used to read and write vector tiles, respectively as tileset on the filesystem or in a mbtiles container (GDAL = 2.3.0) MBUtil - Import and export MBTiles to disk :warning: no longer maintained Datamaps C application that can be used to create vector tiles and store them in an mbtiles. See the render-vector command. :warning: no longer maintained, use tippecanoe instead Mapbox GL JS Plugins gl-draw - Adds support for drawing and editing features on Mapbox GL JS maps Servers tessera - Supports serving and rendering vector tiles. Uses the same core libraries as Mapbox Studio. tessella - lightweight Node.js Mapbox Vector Tiles server. Inspired by tessera. tilestrata - with tilestrata-vt, it can generate Mapnik Vector Tiles; with tilestrata-postgismvt , it can serve Mapbox Vector Tiles from a PostGIS db Utilery Server to generate vector tiles from PostGIS queries. Python based :warning: no longer maintained tileserver Mapzen Vector Tile Service. TileStache added support for Mapbox Vector tiles via .pbf extension requests. Kartotherian Wikipedia tile server with Tilerator backend tile pre-generator ArcGIS Online - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript Portal for ArcGIS - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript tilesplash - A light and quick nodejs webserver for serving topojson or mapbox vector tiles from a postgis backend go-vtile-example - An example server written in Go Tegola - A MVT server written in pure Go that supports serving tiles from a PostGIS data provider. t-rex - MVT server in a single executable written in Rust. Serves tiles from PostGIS supporting custom tile grids. OSM Scout Server - Maps server providing vector and raster tiles, geocoder, and router. Designed to be used on Linux (mobile and PC) to provide offline maps; written in C++ postserve - A small Python based tileserver using ST_AsMVT and ST_AsMVTGeom to generate vector tiles on the fly. Designed for use with PostGIS 2.4 and the OpenMapTiles project SpatialServer (PGRestAPI) - A multi-purpose GeoSpatial NodeJS web server created at SpatialDev that not only serves MBTiles stuffed with vector tiles, it can also cut vector tiles on the fly from a PostGIS database. :warning: No longer maintained. OpenMapTiles - Set of open-source tools for self-hosting of OpenStreetMap maps in more than 50 languages. It provides both raster as well as vector tiles, WMS and WMTS services for GIS programs, support for JavaScript viewers and mobile SDK. Hastile - Haskell web server using PostGIS to deliver vector tiles. MapServer - Open Source platform for publishing spatial data and interactive mapping applications to the web. MVT output available in 7.2 Low-level utilities vt-pbf serialize JavaScript objects representing vector tiles into binary Protocol Buffer encodings of vector tiles vtzero - minimalist vector tile decoder and encoder in C++ mvt-fixtures - a suite of valid and invalid test fixtures according to the Mapbox Vector Tile spec versions. Includes simplified unit test fixtures and real-world fixtures to test your encoders and decoders. zellige - command line utility written to convert GeoJSON to MVT. mapbox-gl-function - Mapbox GL style function evaluator :warning: now maintained as party of mapbox-gl-js mapbox-gl-filter-simplify - Simplifies and complexifies filters in Mapbox GL Styles :warning: removed Articles Vector tiles remixed - guide to using tilemaker to generating vector tiles Build Your Own Static Vector Tile Pipeline - guide transforming, encoding and hosting tiles in the cloud; using ogr2ogr + tippecanoe + Mapbox GL JS Using the new MVT function in PostGIS - Building a vector tile service with PostGIS, express, and pg-promise. License","title":"Introduccion a vector tiles"},{"location":"introduccion_a_vector_tiles/#introduccion-a-vector-tiles-y-mapbox-i","text":"Vector Tiles es un formato para almacenar datos geogr\u00e1ficos en formato binario (Google Protobuf) y pensados para la visualizaci\u00f3n en navegadores web modernos que soporten webGL. Una tesela vectorial (vector tiles) contiene datos vectoriales georreferenciados (puede contener m\u00faltiples capas), recortados en teselas para facilitar su recuperaci\u00f3n. Son equivalentes a las teselas raster tradicionales (XYZ,WMTS, TMS) pero retornan datos vectoriales en lugar de una imagen. Cada conjunto de teselas vectoriales tiene su propio esquema. Un esquema consiste en nombres de capas, atributos, selecci\u00f3n de elementos.","title":"Introducci\u00f3n a Vector Tiles y Mapbox (I)"},{"location":"introduccion_a_vector_tiles/#contexto","text":"En 2005 GoogleMaps introdujo una \"nueva\" forma de mostrar datos geogr\u00e1ficos por la web, pregenerando el mapa por niveles de zoom y tiles (teselas) de 256x256 pixeles. Tambi\u00e9n cre\u00f3 una nueva proyecci\u00f3n basada en mercator, llamada pseude-mercator o web mercator , cuyo c\u00f3digo EPSG es 3857 Despu\u00e9s de GoogleMaps, otros proveedores o plataformas c\u00f3mo OpenStreetMap siguen esta misma forma de organizar la geoinformaci\u00f3n.","title":"Contexto"},{"location":"introduccion_a_vector_tiles/#http","text":"Para cargar la im\u00e1genes se ulitza una llamada HTTP rest d\u00f3nde se especifica; https://.../.../z/x/y.format Z= Nivel de zoom X=coordenada X Y=coordenada Y Formato Raster: Im\u00e1gen png o JPEG Vector: (pbf o mvt)","title":"HTTP"},{"location":"introduccion_a_vector_tiles/#protocolos","text":"Existen tres especificaciones para servir tiles TMS (Tile Map Service): X Y coordenadas empiezan de debajo izquierda (t\u00edpico eje cartesiano de coordenadas) WMTS (Web Map Tile Service): OGC estandard , corrdenadas empiezan de arriba izquierda. ZXY o \"slippy map\": Igual que TMS pero la Y empieza por arriba izquierda","title":"Protocolos"},{"location":"introduccion_a_vector_tiles/#caracteristicas","text":"Las teselas vectoriales han sido utilizadas por el cliente Android de Google Maps desde diciembre de 2010 y en el cliente de escritorio desde 2013. Las teselas vectoriales para renderizar los datos de OpenStreetMap se propusieron por primera vez en marzo de 2013 y est\u00e1n soportadas por Mapnik, el renderizador de datos de OpenStreetMap m\u00e1s utilizado. Mapbox, proveedor comercial de herramientas de cartograf\u00eda personalizada y de hosting, es el m\u00e1xini impulsor de esta tecnologia y ha centrado su herramienta de cartograf\u00eda, Mapbox Studio, en torno a las teselas vectoriales. Cada tile es un contenedor de datos vectores y atributos Los Tiles no tienen estilo, el estilo se aplica en cliente Soporta rotaci\u00f3n y orientaci\u00f3n Soporta extrusi\u00f3n y 3D","title":"Caracteristicas"},{"location":"introduccion_a_vector_tiles/#herramientas-y-recursos","text":"Fuente: https://github.com/mapbox/awesome-vector-tiles","title":"Herramientas y recursos"},{"location":"introduccion_a_vector_tiles/#parsers-generators","text":"vector-tile-js - Parses vector tiles with JavaScript. mapnik-vector-tile - C++ vector tile read/write implementation on top of Mapnik. mbtiles-cpp - C++ library for decoding of mbtiles and vector data into function callbacks. vector-tile-py - Python tool to convert a Mapnik vector tile to GeoJSON node-mapnik - Node.js API for vector tiles which depends on mapnik-vector-tile vector-tile-cs - Parses vector tiles with C# (native C# implementation, no dependencies). mapbox-vector-tile-cs - Parses vector tiles with C# (uses protobuf-net). tilelive-bridge - Implements Tilelive API for creating vector tiles from traditional Mapnik datasources in Node.js. tilelive-vector - Implements Tilelive API for reading vector tiles and rendering to image tiles in Node.js. mapbox-vector-tile is a Python package for vector tile encoding. Used in Mapzen's vector tile service tileserver and TileStache. :warning: Only support V1 Tile spec and not V2, no longer maintained geojson-vt - Slice GeoJSON into vector tiles on the fly in the browser. java-vector-tile - A java encoder and decoder for vector tiles. mapbox-vector-tile-java - Encode and decode v2.1 Mapbox Vector Tiles. Convert JTS Geometry to and from MVT features, including simple user data support. Utility functions for converting world coordinates to MVT coordinates and clipping to a tile envelope. cached-vector-tile - An alternative implementation of the vector-tile-js interface, backed by plain JS objects/arrays rather than parsed-on-demand protobuf data. Trades away memory efficiency for faster feature.loadGeometry() calls. tilegrinder - A helper library for applying a data altering function on each vector tile in an MBTiles, using the native protobuf wrapper for de- and encoding, recompressing the results and storing them either in an MBTiles or as single files. SwiftVectorTiles - A Swift encoder for vector tiles according to the Mapbox vector tile spec. orb - A Go geometry library with mvt - geojson support.","title":"Parsers &amp; Generators"},{"location":"introduccion_a_vector_tiles/#clients","text":"Mapbox GL Native - C++/OpenGL vector maps library with native SDKs for Android, iOS, Node.js, macOS, and Qt Mapbox GL JS - JavaScript/WebGL vector maps library. OpenLayers 3 - JavaScript vector raster library. WhirlyGlobe/Maply - Objective C code that is able to read and render vector tiles(and style with mapnik xml) on iOS devices. Leaflet.MapboxVectorTile is able to read PBF MapboxVectorTiles from a REST endpoint and render them as a TileLayer on a Leaflet Map. Use this option if you want to utilize vector tiles on a standard Leaflet web map without needing WebGL. CARTO Mobile SDK - C++ maps library focused on offline features, for iOS, Android, Windows Phone and Xamarin with bindings for Java, Objective-C and C#. Based on Nutiteq Maps SDK , but open source and uses CartoCSS. Mapzen Tangram - JavaScript library for rendering 2D 3D maps live in a web browser with WebGL, supports MVT, GeoJSON, TopoJSON Mapzen Tangram-es - C++ library for rendering 2D and 3D maps using OpenGL ES 2 with custom styling and interactions mapbox-gl-leaflet - Create Mapbox GL layers in Leaflet react-native-mapbox-gl - Render Mapbox GL maps from React applications hoverboard - Render vector tiles on canvas with Leaflet 0.7.x (supports GeoJSON, TopoJSON, and protobuf) :warning: no longer maintained Leaflet.VectorGrid - Display gridded vector data (sliced GeoJSON, TopoJSON or Mapbox Vector Tiles) in Leaflet 1.0.0 ArcGIS API for JavaScript - Draw vector tile layers as part of your web map. Rendering done via mapbox-gl-js integration. mapscii - A Vector Tile to Braille and ASCII renderer for xterm-compatible terminals Unofficial Mapbox GL Native bindings for Qt QML - Qt QML bindings for Qt 5.6 and higher. Mapbox-vector-tiles-basic-js-renderer - A fork of mapbox-gl-js giving you full control over rendering of specific tiles, also provides vector tile overlay for google maps.","title":"Clients"},{"location":"introduccion_a_vector_tiles/#applications-command-line-tools","text":"Mapbox Studio - Web design studio for creating and styling vector tiles. Mapbox Studio Classic - Desktop design studio for both creating vector tiles from raw geodata and for rendering them on-the-fly into image tiles. Internally uses tilelive.js modules to handle vector tiles (see tilelive-bridge and tilelive-vector ) :warning: use Mapbox Studio instead. kosmtik - Design maps with CartoCSS and Mapnik. ArcGIS Pro - Generate vector tiles from maps authored in ArcGIS Pro or imported from ArcMap. MVT Styler - map style editor for vector tiles. Maputnik - A visual style editor for the Mapbox GL style specification. QGIS Vector Tiles Reader - QGIS Python plugin which reads Mapbox Vector Tiles from local MBTiles file or remote mapbox-gl-inspect - Plugin for Mapbox GL JS to view the view and inspect VT features.","title":"Applications / Command line tools"},{"location":"introduccion_a_vector_tiles/#cli-utilities","text":"mbview - Watch MBTiles in your localhost. View tiles in a basic Mapbox GL JS webapp locally tippecanoe - Build vector tilesets from large collections of GeoJSON features. tilemaker - Command line tool to produce vector tiles directly from an .osm.pbf extract without an intermediate database. mapbox-filter - Filter MBTiles according to Mapbox GL JS styles, shrink MBTiles directly, serve locally over http, publish to S3-compatibile storage vector-tiles-producer Command line tool in C++ to creates vector tiles for a given area at chosen zoom levels using a Mapnik XML. :warning: no longer maintained vt-geojson - decodes vector tiles to GeoJSON FeatureCollections tl - An alternate command line interface to tilelive tileshrink - Reduce the layer extent and simplify the resulting geometries of all vector tiles in an MBTiles tiler @GeoVation - Command line tool for converting GeoJSON, Shapefiles or PostGIS layer to raw Vector Tiles (or MBTiles) tiler @thomersch - Command line tool to convert GeoJSON to Vector Tiles (written in Go language). geojson2mvt - npm package for building a static vector tile tree for given xyz bounds from a geojson file (uses geojson-vt ) OGR MVT and MBTiles - The GDAL/OGR MVT and MBTILES drivers can be used to read and write vector tiles, respectively as tileset on the filesystem or in a mbtiles container (GDAL = 2.3.0) MBUtil - Import and export MBTiles to disk :warning: no longer maintained Datamaps C application that can be used to create vector tiles and store them in an mbtiles. See the render-vector command. :warning: no longer maintained, use tippecanoe instead","title":"CLI Utilities"},{"location":"introduccion_a_vector_tiles/#mapbox-gl-js-plugins","text":"gl-draw - Adds support for drawing and editing features on Mapbox GL JS maps","title":"Mapbox GL JS Plugins"},{"location":"introduccion_a_vector_tiles/#servers","text":"tessera - Supports serving and rendering vector tiles. Uses the same core libraries as Mapbox Studio. tessella - lightweight Node.js Mapbox Vector Tiles server. Inspired by tessera. tilestrata - with tilestrata-vt, it can generate Mapnik Vector Tiles; with tilestrata-postgismvt , it can serve Mapbox Vector Tiles from a PostGIS db Utilery Server to generate vector tiles from PostGIS queries. Python based :warning: no longer maintained tileserver Mapzen Vector Tile Service. TileStache added support for Mapbox Vector tiles via .pbf extension requests. Kartotherian Wikipedia tile server with Tilerator backend tile pre-generator ArcGIS Online - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript Portal for ArcGIS - Supports serving vector tiles and rendering in the mapping application powered by the ArcGIS API for JavaScript tilesplash - A light and quick nodejs webserver for serving topojson or mapbox vector tiles from a postgis backend go-vtile-example - An example server written in Go Tegola - A MVT server written in pure Go that supports serving tiles from a PostGIS data provider. t-rex - MVT server in a single executable written in Rust. Serves tiles from PostGIS supporting custom tile grids. OSM Scout Server - Maps server providing vector and raster tiles, geocoder, and router. Designed to be used on Linux (mobile and PC) to provide offline maps; written in C++ postserve - A small Python based tileserver using ST_AsMVT and ST_AsMVTGeom to generate vector tiles on the fly. Designed for use with PostGIS 2.4 and the OpenMapTiles project SpatialServer (PGRestAPI) - A multi-purpose GeoSpatial NodeJS web server created at SpatialDev that not only serves MBTiles stuffed with vector tiles, it can also cut vector tiles on the fly from a PostGIS database. :warning: No longer maintained. OpenMapTiles - Set of open-source tools for self-hosting of OpenStreetMap maps in more than 50 languages. It provides both raster as well as vector tiles, WMS and WMTS services for GIS programs, support for JavaScript viewers and mobile SDK. Hastile - Haskell web server using PostGIS to deliver vector tiles. MapServer - Open Source platform for publishing spatial data and interactive mapping applications to the web. MVT output available in 7.2","title":"Servers"},{"location":"introduccion_a_vector_tiles/#low-level-utilities","text":"vt-pbf serialize JavaScript objects representing vector tiles into binary Protocol Buffer encodings of vector tiles vtzero - minimalist vector tile decoder and encoder in C++ mvt-fixtures - a suite of valid and invalid test fixtures according to the Mapbox Vector Tile spec versions. Includes simplified unit test fixtures and real-world fixtures to test your encoders and decoders. zellige - command line utility written to convert GeoJSON to MVT. mapbox-gl-function - Mapbox GL style function evaluator :warning: now maintained as party of mapbox-gl-js mapbox-gl-filter-simplify - Simplifies and complexifies filters in Mapbox GL Styles :warning: removed","title":"Low-level utilities"},{"location":"introduccion_a_vector_tiles/#articles","text":"Vector tiles remixed - guide to using tilemaker to generating vector tiles Build Your Own Static Vector Tile Pipeline - guide transforming, encoding and hosting tiles in the cloud; using ogr2ogr + tippecanoe + Mapbox GL JS Using the new MVT function in PostGIS - Building a vector tile service with PostGIS, express, and pg-promise.","title":"Articles"},{"location":"introduccion_a_vector_tiles/#license","text":"","title":"License"},{"location":"plugins_leaflet/","text":"Leaflet Plugins Gracias a ser un proyecto de c\u00f3digo abierto y de las aportaciones de los usuarios, Leaflet tiene m\u00e1s de 250 plugins o \"peque\u00f1as aplicaciones\" que a\u00f1aden funcionalidades a la libreria. Plugins http://leafletjs.com/plugins.html \u00bfC\u00f3mo utilizar un Plugin? 1-Primero debemos en la p\u00e1gina de pligins si existe alguno que nos ayude a solucionar nuestro problema o necessidad 2-Entraremos en la p\u00e1gina GIT del plugin y leeremos su documentaci\u00f3n. Atencion !! A veces la documentaci\u00f3n pueder ser poca y confusa 3.1- Si existe una versi\u00f3n on-line del plugin (URL en CDN), la invocaremos en nuestra aplicaci\u00f3n 3.2- Si no existe, descargaremos los archivos del plugin - son .js, pero tambie\u0144 pueden ser .css i imagenes - normalmente se encuentran en los directorios /dist o /src y los guardaremos en nuestro proyecto. Atencion!! Buscador de Farmacias de Barcelona Nos han encargado realizar un mapa para poder localizar y buscar las farmacias de Barcelona Los datos de farmacias estan el web de Datos Abiertos de Barcelona https://opendata-ajuntament.barcelona.cat/data/es/dataset/sanitat-farmacies Existe un plugin de Leaflet llamado Leaflet-ajax que permite cargar capas GeoJSON ya sea en local o en remoto Leaflet-ajax https://github.com/calvinmetcalf/leaflet-ajax Existe un plugin de Leaflet llamado Leaflet-search que permite buscar dentro de atributos de un GeoJSON Leaflet-Search https://github.com/stefanocudini/leaflet-search Ejemplo buscador de Farmacias Paso 1: Descargamos archivo de farmacias Convertimos el archivo a GeoJson utilizando QGIS Guardamos el archivo en /geoweb/datos/farmacias.geojson Paso 2: Abrimos archivo mapabase.html y guardamos como File-- Save as farmacias.html A\u00f1adimos un titulo y la funci\u00f3n inical initMapaFarmacias() de nuestro proyecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaFarmacias (){ init (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html Paso 3: A\u00f1adimos Plugins al proyecto Podemos descargar plugins del directorio /dist y guardarlos en nuestros directorios /js o /css Tambi\u00e9n podemos utilizar la URL directamente (nuestro caso) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script script src = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js / script script src = https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js / script link rel = stylesheet href = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css / link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaFarmacias (){ init (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html Paso 4:Cargamos GeoJson Farmacias Miramos documentaci\u00f3n Leaflet-Ajax plugin https://github.com/calvinmetcalf/leaflet-ajax Miramos referencia L.Geojson https://leafletjs.com/reference-1.6.0.html#geojson Dentro de nuestro directorio /geoweb/js/ creamos el archivo farmacias.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 var layerFarmacias ; var urlFarmacias = datos/farmacias.geojson ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = b + feature . properties . EQUIPAMENT + /b + br + feature . properties . TIPUS_VIA + . + feature . properties . NOM_CARRER + + feature . properties . NUM_CARRER_1 + /b ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias, Farmacias ); } Paso 5: A\u00f1adimos farmacias.js al archivo farmacias.html Llamamos funcion addDatosFarmacias() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script script src = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js / script script src = https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js / script link rel = stylesheet href = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css / link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script src = js/farmacias.js / script script function initMapaFarmacias (){ init (); addDatosFarmacias (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html Miramos que funcione Paso 6:Buscar Farmacias Miramos documentaci\u00f3n Leaflet-Search plugin https://github.com/stefanocudini/leaflet-search A\u00f1adimos el control dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 var layerFarmacias ; var urlFarmacias = datos/farmacias.geojson ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = b + feature . properties . EQUIPAMENT + /b + br + feature . properties . TIPUS_VIA + . + feature . properties . NOM_CARRER + + feature . properties . NUM_CARRER_1 + /b ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias, Farmacias ); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : EQUIPAMENT , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( search:locationfound , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m mapa base leaflet git push Pr\u00e1ctica libre no puntuable para cargar GeoJSONs con plugin GeoJSON AJAX Abre mapabase.html -- guardar c\u00f3mo mapatest.html A\u00f1ade el plugin de GeoJSON AJAX Prueba las diferentes formas de trabajar con GeoJSONs y a\u00f1\u00e1delas como overlayMaps en el control de capas GeoJson por defecto 1 2 3 4 5 var comarcasPoligonoDefault = new L . GeoJSON . AJAX ( datos/comarcas.geojson ). addTo ( map ); var farmaciasPuntoDefault = new L . GeoJSON . AJAX ( datos/farmacias.geojson ). addTo ( map ); var carrilsBiciLineaDefault = new L . GeoJSON . AJAX ( datos/carrils-bici.geojson ). addTo ( map ); GeoJson con estilos GeoJson con estilos y Popups 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 var comarcasPoligonoStylePop = new L . GeoJSON . AJAX ( datos/comarcas.geojson , { style : function ( feature ) { return { fillColor : #fab81e , color : #ffffff , weight : 2 , opacity : 1 , fillOpacity : 0.5 } }, onEachFeature : function ( feature , layer ) { popupContentPol = b + feature . properties . NOM + /b ; layer . bindPopup ( popupContentPol ); }, }). addTo ( map ); var farmaciasPuntoStylePop = new L . GeoJSON . AJAX ( datos/farmacias.geojson , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) }, onEachFeature : function ( feature , layer ) { popupContentP = b + feature . properties . NOM + /b br + feature . properties . CARRCADAST + + feature . properties . DOORNUM + /b ; layer . bindPopup ( popupContentP ); }, }). addTo ( map ); var carrilsBiciLineaStylePop = new L . GeoJSON . AJAX ( datos/carrils-bici.geojson , { style : function ( feature ) { return { color : #d607f2 , weight : 6 } }, onEachFeature : function ( feature , layer ) { popupContentL = b + feature . properties . TOOLTIP + /b ; layer . bindPopup ( popupContentL ); }, }). addTo ( map ); GeoJson remoto 1 2 3 4 5 6 7 8 9 10 var rivers = new L . GeoJSON . AJAX ( https://raw.githubusercontent.com/nvkelso/natural-earth-vector/master/geojson/ne_10m_rivers_europe.geojson , { style : function ( feature ) { return { color : #00ffe1 , weight : 6 } }, }). addTo ( map ); Plugin Geosearch: Ejemplo extra buscador de Callejero Plugin que permite connectar con servicios de Geocodificaci\u00f3n * Plugin https://github.com/MuellerMatthew/L.GeoSearch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 html lang = es head title Callejero / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = https://unpkg.com/leaflet-geosearch@2.7.0/assets/css/leaflet.css / script src = https://unpkg.com/leaflet-geosearch@2.7.0/dist/bundle.min.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaCalles () { init (); new GeoSearch . GeoSearchControl ({ // provider: new GeoSearch.OpenStreetMapProvider() provider : new GeoSearch . EsriProvider () }). addTo ( map ); } / script / head body onLoad = initMapaCalles() div id = map / div / body / html","title":"4. Plugins Leaflet"},{"location":"plugins_leaflet/#leaflet-plugins","text":"Gracias a ser un proyecto de c\u00f3digo abierto y de las aportaciones de los usuarios, Leaflet tiene m\u00e1s de 250 plugins o \"peque\u00f1as aplicaciones\" que a\u00f1aden funcionalidades a la libreria. Plugins http://leafletjs.com/plugins.html","title":"Leaflet Plugins"},{"location":"plugins_leaflet/#como-utilizar-un-plugin","text":"1-Primero debemos en la p\u00e1gina de pligins si existe alguno que nos ayude a solucionar nuestro problema o necessidad 2-Entraremos en la p\u00e1gina GIT del plugin y leeremos su documentaci\u00f3n. Atencion !! A veces la documentaci\u00f3n pueder ser poca y confusa 3.1- Si existe una versi\u00f3n on-line del plugin (URL en CDN), la invocaremos en nuestra aplicaci\u00f3n 3.2- Si no existe, descargaremos los archivos del plugin - son .js, pero tambie\u0144 pueden ser .css i imagenes - normalmente se encuentran en los directorios /dist o /src y los guardaremos en nuestro proyecto. Atencion!!","title":"\u00bfC\u00f3mo utilizar un Plugin?"},{"location":"plugins_leaflet/#ejemplo-buscador-de-farmacias","text":"","title":"Ejemplo buscador de Farmacias"},{"location":"plugins_leaflet/#paso-1","text":"Descargamos archivo de farmacias Convertimos el archivo a GeoJson utilizando QGIS Guardamos el archivo en /geoweb/datos/farmacias.geojson","title":"Paso 1:"},{"location":"plugins_leaflet/#paso-2","text":"Abrimos archivo mapabase.html y guardamos como File-- Save as farmacias.html A\u00f1adimos un titulo y la funci\u00f3n inical initMapaFarmacias() de nuestro proyecto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaFarmacias (){ init (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html","title":"Paso 2:"},{"location":"plugins_leaflet/#paso-3","text":"A\u00f1adimos Plugins al proyecto Podemos descargar plugins del directorio /dist y guardarlos en nuestros directorios /js o /css Tambi\u00e9n podemos utilizar la URL directamente (nuestro caso) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script script src = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js / script script src = https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js / script link rel = stylesheet href = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css / link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaFarmacias (){ init (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html","title":"Paso 3:"},{"location":"plugins_leaflet/#paso-4cargamos-geojson-farmacias","text":"Miramos documentaci\u00f3n Leaflet-Ajax plugin https://github.com/calvinmetcalf/leaflet-ajax Miramos referencia L.Geojson https://leafletjs.com/reference-1.6.0.html#geojson Dentro de nuestro directorio /geoweb/js/ creamos el archivo farmacias.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 var layerFarmacias ; var urlFarmacias = datos/farmacias.geojson ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = b + feature . properties . EQUIPAMENT + /b + br + feature . properties . TIPUS_VIA + . + feature . properties . NOM_CARRER + + feature . properties . NUM_CARRER_1 + /b ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias, Farmacias ); }","title":"Paso 4:Cargamos GeoJson Farmacias"},{"location":"plugins_leaflet/#paso-5","text":"A\u00f1adimos farmacias.js al archivo farmacias.html Llamamos funcion addDatosFarmacias() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 html lang = es head title Farmacias / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script script src = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.js / script script src = https://calvinmetcalf.github.io/leaflet-ajax/dist/leaflet.ajax.js / script link rel = stylesheet href = https://labs.easyblog.it/maps/leaflet-search/src/leaflet-search.css / link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script src = js/farmacias.js / script script function initMapaFarmacias (){ init (); addDatosFarmacias (); } / script / head body onLoad = initMapaFarmacias() div id = map / div / body / html Miramos que funcione","title":"Paso 5:"},{"location":"plugins_leaflet/#paso-6buscar-farmacias","text":"Miramos documentaci\u00f3n Leaflet-Search plugin https://github.com/stefanocudini/leaflet-search A\u00f1adimos el control dentro de la funci\u00f3n addDatosFarmacias() de farmacias.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 var layerFarmacias ; var urlFarmacias = datos/farmacias.geojson ; function addDatosFarmacias () { layerFarmacias = new L . GeoJSON . AJAX ( urlFarmacias , { onEachFeature : function ( feature , layer ) { popupContent = b + feature . properties . EQUIPAMENT + /b + br + feature . properties . TIPUS_VIA + . + feature . properties . NOM_CARRER + + feature . properties . NUM_CARRER_1 + /b ; layer . bindPopup ( popupContent ); }, pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }); } }). addTo ( map ); map . setView ([ 41.399733 , 2.168598 ], 13 ); // controlCapas.addOverlay(layerFarmacias, Farmacias ); var searchControl = new L . Control . Search ({ layer : layerFarmacias , initial : false , propertyName : EQUIPAMENT , circleLocation : true , moveToLocation : function ( latlng ) { map . setView ( latlng , 17 ); } }); searchControl . on ( search:locationfound , function ( e ) { e . layer . openPopup (); }); map . addControl ( searchControl ); } \u00bfSubimos el ejemplo al GitHub? 1 2 3 4 git pull git add . git commit -m mapa base leaflet git push","title":"Paso 6:Buscar Farmacias"},{"location":"plugins_leaflet/#practica-libre-no-puntuable-para-cargar-geojsons-con-plugin-geojson-ajax","text":"Abre mapabase.html -- guardar c\u00f3mo mapatest.html A\u00f1ade el plugin de GeoJSON AJAX Prueba las diferentes formas de trabajar con GeoJSONs y a\u00f1\u00e1delas como overlayMaps en el control de capas GeoJson por defecto 1 2 3 4 5 var comarcasPoligonoDefault = new L . GeoJSON . AJAX ( datos/comarcas.geojson ). addTo ( map ); var farmaciasPuntoDefault = new L . GeoJSON . AJAX ( datos/farmacias.geojson ). addTo ( map ); var carrilsBiciLineaDefault = new L . GeoJSON . AJAX ( datos/carrils-bici.geojson ). addTo ( map ); GeoJson con estilos GeoJson con estilos y Popups 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 var comarcasPoligonoStylePop = new L . GeoJSON . AJAX ( datos/comarcas.geojson , { style : function ( feature ) { return { fillColor : #fab81e , color : #ffffff , weight : 2 , opacity : 1 , fillOpacity : 0.5 } }, onEachFeature : function ( feature , layer ) { popupContentPol = b + feature . properties . NOM + /b ; layer . bindPopup ( popupContentPol ); }, }). addTo ( map ); var farmaciasPuntoStylePop = new L . GeoJSON . AJAX ( datos/farmacias.geojson , { pointToLayer : function ( feature , latlng ) { return L . circleMarker ( latlng , { radius : 6 , fillColor : #00ff00 , color : #ffffff , weight : 3 , opacity : 1 , fillOpacity : 0.8 }) }, onEachFeature : function ( feature , layer ) { popupContentP = b + feature . properties . NOM + /b br + feature . properties . CARRCADAST + + feature . properties . DOORNUM + /b ; layer . bindPopup ( popupContentP ); }, }). addTo ( map ); var carrilsBiciLineaStylePop = new L . GeoJSON . AJAX ( datos/carrils-bici.geojson , { style : function ( feature ) { return { color : #d607f2 , weight : 6 } }, onEachFeature : function ( feature , layer ) { popupContentL = b + feature . properties . TOOLTIP + /b ; layer . bindPopup ( popupContentL ); }, }). addTo ( map ); GeoJson remoto 1 2 3 4 5 6 7 8 9 10 var rivers = new L . GeoJSON . AJAX ( https://raw.githubusercontent.com/nvkelso/natural-earth-vector/master/geojson/ne_10m_rivers_europe.geojson , { style : function ( feature ) { return { color : #00ffe1 , weight : 6 } }, }). addTo ( map );","title":"Pr\u00e1ctica libre no puntuable para cargar GeoJSONs con plugin GeoJSON AJAX"},{"location":"plugins_leaflet/#plugin-geosearch-ejemplo-extra-buscador-de-callejero","text":"Plugin que permite connectar con servicios de Geocodificaci\u00f3n * Plugin https://github.com/MuellerMatthew/L.GeoSearch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 html lang = es head title Callejero / title meta charset = utf-8 / meta name = viewport content = width=device-width, initial-scale=1.0 / meta name = author content = autor / meta name = description content = descripci\u00f3n p\u00e1gina / meta name = robots content = index,follow / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.css / script src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.6.0/leaflet.js / script link rel = stylesheet href = https://unpkg.com/leaflet-geosearch@2.7.0/assets/css/leaflet.css / script src = https://unpkg.com/leaflet-geosearch@2.7.0/dist/bundle.min.js / script link rel = stylesheet href = css/estilobase.css / script src = js/mapabase.js / script script function initMapaCalles () { init (); new GeoSearch . GeoSearchControl ({ // provider: new GeoSearch.OpenStreetMapProvider() provider : new GeoSearch . EsriProvider () }). addTo ( map ); } / script / head body onLoad = initMapaCalles() div id = map / div / body / html","title":"Plugin Geosearch: Ejemplo extra  buscador de Callejero"},{"location":"recursos_open_data/","text":"Recursos open data Ver presentaci\u00f3n OpenData Ejemplo API CKAN El API de CKAN http://docs.ckan.org/en/latest/api/index.html no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtrar datasets. En este ejemplo utilizaremos el m\u00e9todo resource_search para buscar datasets en cualquier portal de CKAN Para buscar en portales CKAN necesitamos saber la URL del portal , exemplo http://demo.ckan.org y a\u00f1adir el path del m\u00e9todo a utilizar /api/3/action/resource_search? http://demo.ckan.org/api/3/action/resource_search ? Creaci\u00f3n de un buscador Dentro de nuestor espacio de trabajo creamos un archivo con el nombre de ckan.html . Abrimos el archivo ckan.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 !DOCTYPE html html head meta charset = UTF-8 title B\u00e0sic sample Resource Search API CKAN / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html Abrimos el archivo ckan.html en el navegador. A\u00f1adimos dentro del tag body la maquetaci\u00f3n HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 div class = container h3 Resource Search example / h3 p Package Search br a target = _blank href = http://docs.ckan.org/en/latest/api/ http://docs.ckan.org/en/latest/api/ / a / p form id = _form div class = form-group label for = url_ckan Url: / label select id = url_ckan option value = http://demo.ckan.org/api/3/action/resource_search? ckan.org / option option value = http://old.datahub.io/api/3/action/resource_search? old.datahub.io / option option value = http://dadesobertes.seu-e.cat/api/action/resource_search? Dades Obertes aoc / option !-- a\u00f1adimos BCN opendata -- / select / div div class = form-group label for = text_filter_ckan Filter u (name, descripton, format ) / u / label input type = text class = form-control id = text_filter_ckan value = name:wifi placeholder = text filter / div / form form class = form-inline div class = form-group label for = num_results_ckan Num results / label input type = number size = 3 class = form-control id = num_results_ckan value = 5 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 500px / div / div Abrimos el archivo ckan.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 script $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #_form ). submit ( function ( event ) { sendRequest (); event . preventDefault (); }); function sendRequest (){ var data = { rows : $ ( #num_results_ckan ). val (), query : $ ( #text_filter_ckan ). val () }; $ . ajax ({ url : $ ( #url_ckan ). val (), data : data , dataType : jsonp , success : function ( data ) { if ( data . success ) { $ ( #results ). html ( Total results found: + data . result . count ); $ ( #mygrid ). html ( ); if ( data . result . count = 1 ) { $ ( #mygrid ). append ( ul ); $ . each ( data . result . results , function ( index , value ) { $ ( #mygrid ). append ( li + value . name + : a href= + value . url + + value . url + /a ); $ ( #mygrid ). append ( /li ); }); $ ( #mygrid ). append ( /ul ); } } else { $ ( #results ). html ( An error occured: + data . error . message ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina ckan.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adir una o m\u00e1s URLs de otros portales de CKAN, por ejemplo OpenDataBCN Note Ejercicio 2 : \u00bfC\u00f3mo har\u00edamos para qu\u00e9 en los resultados apareciera la fecha de creaci\u00f3n del dato? Note Ejercicio 3 : Descargamos CSV accidentes Ejemplos API SOCRATA El API de Socrata https://dev.socrata.com no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtra datasets. En este primer ejemplo utilizaremos la Discovery API https://socratadiscovery.docs.apiary.io/ para buscar datasets en cualquier portal de Socrata Creaci\u00f3n de un buscador Creamos un archivo con el nombre de socrata.html . Abrimos el archivo socrata.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 !DOCTYPE html html head meta charset = UTF-8 title Basic sample API Discovery SOCRATA / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html Abrimos el archivo socrata.html en el navegador. A\u00f1adimos dentro del tag * body * la maquetaci\u00f3n HTML. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 div class = container h3 SOCRATA Resource Search example / h3 p Discovery API br a target = _blank href = http://docs.socratadiscovery.apiary.io http://docs.socratadiscovery.apiary.io / a / p form div class = form-group div class = radio label input type = radio name = optionsRadios id = optionsRadios1 value = https://api.eu.socrata.com/api/catalog/v1 checked EU API Discovery / label / div div class = radio label input type = radio name = optionsRadios id = optionsRadios2 value = https://api.us.socrata.com/api/catalog/v1 US API Discovery / label / div / div div class = form-group label for = text_filter_socrata Filter u / u / label input type = text class = form-control id = text_filter_socrata value = Contracts placeholder = text filter / div / form form class = form-inline div class = form-group label for = num_results_socrata Num results / label input type = number size = 3 class = form-control id = num_results_socrata value = 25 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 500px / div / div Abrimos el archivo socrata.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 script $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #text_filter_socrata ). on ( keypress , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); function sendRequest () { var _data = { q : $ ( #text_filter_socrata ). val (), limit : $ ( #num_results_socrata ). val () }; $ . ajax ({ url : $ ( input:radio[name=optionsRadios]:checked ). val (), data : _data , method : GET , dataType : json , success : function ( data ) { console . info ( data ); if ( data ) { $ ( #results ). html ( Total results found: + data . resultSetSize ); $ ( #mygrid ). html ( ); if ( data . resultSetSize = 1 ) { $ ( #mygrid ). append ( ul ); $ . each ( data . results , function ( index , value ) { $ ( #mygrid ). append ( li b + value . resource . name + /b ( + value . resource . type + ): a target= _blank href= + value . link + + value . link + /a ); $ ( #mygrid ). append ( /li ); }); $ ( #mygrid ). append ( /ul ); } } else { $ ( #results ). html ( An error occured: ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina socrata.html y lanzamos b\u00fasquedas Note Ejercicio 1 : \u00bfC\u00f3mo filtrar\u00edamos para qu\u00e9 s\u00f3lo ense\u00f1ara \"assets\" de tipo \"map\", only:map ? Socrata y Leaflet: Mapificaci\u00f3n de resultados Creamos un archivo con el nombre de socrata_mapa.html . Abrimos el archivo socrata_mapa.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 !DOCTYPE html html head meta charset = UTF-8 title Basic Leaflet Map sample API Discovery SOCRATA / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/Leaflet.Spin/1.1.0/leaflet.spin.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html A\u00f1adimos dentro del tag body la maquetaci\u00f3n HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 div class = container h3 SOCRATA Maps Resources / h3 div class = row div class = col-md-6 p Discovery API br a target = _blank href = http://docs.socratadiscovery.apiary.io http://docs.socratadiscovery.apiary.io / a / p form div class = form-group div class = radio label input type = radio name = optionsRadios id = optionsRadios1 value = https://api.eu.socrata.com/api/catalog/v1 checked EU API Discovery / label / div div class = radio label input type = radio name = optionsRadios id = optionsRadios2 value = https://api.us.socrata.com/api/catalog/v1 US API Discovery / label / div / div div class = form-group label for = text_filter_socrata Filter u / u / label input type = text class = form-control id = text_filter_socrata value = placeholder = text filter div class = checkbox label input type = checkbox id = chk_transparencia value = analisi.transparenciacatalunya.cat Only https://analisi.transparenciacatalunya.cat / label / div div Filter : only=maps / div / div / form form class = form-inline div class = form-group label for = num_results_socrata Num results / label input type = number size = 3 class = form-control id = num_results_socrata value = 25 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 365px;overflow:auto / div / div div class = col-md-6 div id = map style = width:100%;height:700px / div / div / div Abrimos el archivo socrata_mapa.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascriptscript $ . ajaxSetup ({ cache : true }); var map ; var geojsonLayer ; var _LL ; $ ( document ). ready ( function () { map = L . map ( map ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { maxZoom : 17 , minZoom : 1 , attribution : Tiles \u00a9 Esri , }) osm = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }). addTo ( map ); Stamen_Toner = L . tileLayer ( http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 }) var baseMaps = { Orto : esri , Mapa : osm , Toner : Stamen_Toner }; L . control . layers ( baseMaps , null ). addTo ( map ); L . control . scale (). addTo ( map ); $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #text_filter_socrata ). on ( keypress , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); $ ( document ). on ( click , .btn-xs , function () { var attr = $ ( this ). attr ( data ); if ( attr attr . indexOf ( # ) != - 1 ) { var params = attr . split ( # ); var _url = https:// + params [ 1 ] + /api/views.json?method=getByResourceName name= + params [ 0 ]; $ . ajax ({ url : _url , method : GET , dataType : json , success : function ( data ) { if ( data . childViews ) { //var _url2 = https:// + params[1] + /resource/ + data.childViews[0] + .json?$limit=30 ; var _url2 = https:// + params [ 1 ] + /api/geospatial/ + data . childViews [ 0 ] + ?method=export format=GeoJSON ; sendRequestGEOJSON ( _url2 , true ); } else { var _url2 = http:// + params [ 1 ] + /resource/ + params [ 0 ] + .json?$limit=30 ; sendRequestGEOJSON ( _url2 , false ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } else { alert ( No resource available ); } }); function clearLayers () { if ( map . hasLayer ( geojsonLayer )) { map . removeLayer ( geojsonLayer ); }; if ( map . hasLayer ( _LL )) { map . removeLayer ( _LL ); }; } function sendRequestGEOJSON ( _url2 , isGeoJson ) { map . spin ( true ); var stylePoint = { radius : 8 , fillColor : #ff7800 , color : #000 , weight : 1 , opacity : 1 , fillOpacity : 0.8 }; clearLayers (); $ . ajax ({ type : GET , url : _url2 , // jsonp: $jsonp , // dataType: jsonp , success : function ( response ) { if ( isGeoJson ) { geojsonLayer = L . geoJson ( response , { style : function ( feature ) { return { weight : 2 , color : #999 , opacity : 1 , fillColor : #B0DE5C , fillOpacity : 0.8 }; }, onEachFeature : popUp }). addTo ( map ); map . fitBounds ( geojsonLayer . getBounds ()); map . spin ( false ); } else { _LL = L . featureGroup () for ( var i = 0 ; i response . length ; i ++ ) { var marker = response [ i ]; if ( response [ i ]. location_1 ) { L . circleMarker ([ response [ i ]. location_1 . latitude , response [ i ]. location_1 . longitude ], stylePoint ). addTo ( _LL ); } else if ( response [ i ]. location ) { L . circleMarker ([ response [ i ]. location . latitude , response [ i ]. location . longitude ], stylePoint ). addTo ( _LL ); } else { $ ( #results ). html ( ERROR no locations found ); map . spin ( false ); } } _LL . addTo ( map ); map . panTo ( _LL . getBounds (). getCenter ()); map . spin ( false ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); map . spin ( false ); } }); } function popUp ( f , l ) { var out = []; if ( f . properties ) { for ( key in f . properties ) { out . push ( key + : + f . properties [ key ]); } l . bindPopup ( out . join ( br / )); } } function sendRequest () { var _data = { limit : $ ( #num_results_socrata ). val (), only : maps }; console . info ( $ ( #chk_transparencia ). attr ( checked )); if ( $ ( #chk_transparencia ). attr ( checked )) { _data . domains = $ ( #chk_transparencia ). val (); } if ( $ ( #text_filter_socrata ). val () != ) { _data . q = $ ( #text_filter_socrata ). val (); } $ . ajax ({ url : $ ( input:radio[name=optionsRadios]:checked ). val (), data : _data , method : GET , dataType : json , success : function ( data ) { console . info ( data ); if ( data ) { $ ( #results ). html ( Total results found: + data . resultSetSize ); $ ( #mygrid ). html ( ); if ( data . resultSetSize = 1 ) { var cList = $ ( ul ). appendTo ( #mygrid ); $ . each ( data . results , function ( index , value ) { $ ( li class= li b + value . resource . name + : /b + a target= _blank href= + value . link + Link /a + a class= btn btn-success btn-xs href= # data= + value . resource . id + # + value . metadata . domain + Map it /a ). appendTo ( cList ); }); } } else { console . info ( data ); $ ( #results ). html ( An error occured: ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina socrat_mapa.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adimos attribution y download_count a los resultados Note Ejercicio 2 : \u00bfCambiamos colores y estilos de los puntos del mapa? Referencias http://docs.ckan.org/en/latest/api/ http://ckan.org https://www.socrata.com http://docs.socratadiscovery.apiary.io","title":"Recursos open data"},{"location":"recursos_open_data/#recursos-open-data","text":"","title":"Recursos open data"},{"location":"recursos_open_data/#ver-presentacion-opendata","text":"","title":"Ver presentaci\u00f3n OpenData"},{"location":"recursos_open_data/#ejemplo-api-ckan","text":"El API de CKAN http://docs.ckan.org/en/latest/api/index.html no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtrar datasets. En este ejemplo utilizaremos el m\u00e9todo resource_search para buscar datasets en cualquier portal de CKAN Para buscar en portales CKAN necesitamos saber la URL del portal , exemplo http://demo.ckan.org y a\u00f1adir el path del m\u00e9todo a utilizar /api/3/action/resource_search? http://demo.ckan.org/api/3/action/resource_search ?","title":"Ejemplo API CKAN"},{"location":"recursos_open_data/#creacion-de-un-buscador","text":"Dentro de nuestor espacio de trabajo creamos un archivo con el nombre de ckan.html . Abrimos el archivo ckan.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 !DOCTYPE html html head meta charset = UTF-8 title B\u00e0sic sample Resource Search API CKAN / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html Abrimos el archivo ckan.html en el navegador. A\u00f1adimos dentro del tag body la maquetaci\u00f3n HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 div class = container h3 Resource Search example / h3 p Package Search br a target = _blank href = http://docs.ckan.org/en/latest/api/ http://docs.ckan.org/en/latest/api/ / a / p form id = _form div class = form-group label for = url_ckan Url: / label select id = url_ckan option value = http://demo.ckan.org/api/3/action/resource_search? ckan.org / option option value = http://old.datahub.io/api/3/action/resource_search? old.datahub.io / option option value = http://dadesobertes.seu-e.cat/api/action/resource_search? Dades Obertes aoc / option !-- a\u00f1adimos BCN opendata -- / select / div div class = form-group label for = text_filter_ckan Filter u (name, descripton, format ) / u / label input type = text class = form-control id = text_filter_ckan value = name:wifi placeholder = text filter / div / form form class = form-inline div class = form-group label for = num_results_ckan Num results / label input type = number size = 3 class = form-control id = num_results_ckan value = 5 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 500px / div / div Abrimos el archivo ckan.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 script $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #_form ). submit ( function ( event ) { sendRequest (); event . preventDefault (); }); function sendRequest (){ var data = { rows : $ ( #num_results_ckan ). val (), query : $ ( #text_filter_ckan ). val () }; $ . ajax ({ url : $ ( #url_ckan ). val (), data : data , dataType : jsonp , success : function ( data ) { if ( data . success ) { $ ( #results ). html ( Total results found: + data . result . count ); $ ( #mygrid ). html ( ); if ( data . result . count = 1 ) { $ ( #mygrid ). append ( ul ); $ . each ( data . result . results , function ( index , value ) { $ ( #mygrid ). append ( li + value . name + : a href= + value . url + + value . url + /a ); $ ( #mygrid ). append ( /li ); }); $ ( #mygrid ). append ( /ul ); } } else { $ ( #results ). html ( An error occured: + data . error . message ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina ckan.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adir una o m\u00e1s URLs de otros portales de CKAN, por ejemplo OpenDataBCN Note Ejercicio 2 : \u00bfC\u00f3mo har\u00edamos para qu\u00e9 en los resultados apareciera la fecha de creaci\u00f3n del dato? Note Ejercicio 3 : Descargamos CSV accidentes","title":"Creaci\u00f3n de un buscador"},{"location":"recursos_open_data/#ejemplos-api-socrata","text":"El API de Socrata https://dev.socrata.com no ofrece diferetes niveles y m\u00e9todos para poder buscar y filtra datasets. En este primer ejemplo utilizaremos la Discovery API https://socratadiscovery.docs.apiary.io/ para buscar datasets en cualquier portal de Socrata","title":"Ejemplos API SOCRATA"},{"location":"recursos_open_data/#creacion-de-un-buscador_1","text":"Creamos un archivo con el nombre de socrata.html . Abrimos el archivo socrata.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 !DOCTYPE html html head meta charset = UTF-8 title Basic sample API Discovery SOCRATA / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html Abrimos el archivo socrata.html en el navegador. A\u00f1adimos dentro del tag * body * la maquetaci\u00f3n HTML. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 div class = container h3 SOCRATA Resource Search example / h3 p Discovery API br a target = _blank href = http://docs.socratadiscovery.apiary.io http://docs.socratadiscovery.apiary.io / a / p form div class = form-group div class = radio label input type = radio name = optionsRadios id = optionsRadios1 value = https://api.eu.socrata.com/api/catalog/v1 checked EU API Discovery / label / div div class = radio label input type = radio name = optionsRadios id = optionsRadios2 value = https://api.us.socrata.com/api/catalog/v1 US API Discovery / label / div / div div class = form-group label for = text_filter_socrata Filter u / u / label input type = text class = form-control id = text_filter_socrata value = Contracts placeholder = text filter / div / form form class = form-inline div class = form-group label for = num_results_socrata Num results / label input type = number size = 3 class = form-control id = num_results_socrata value = 25 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 500px / div / div Abrimos el archivo socrata.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascript 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 script $ . ajaxSetup ({ cache : true }); $ ( document ). ready ( function () { $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #text_filter_socrata ). on ( keypress , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); function sendRequest () { var _data = { q : $ ( #text_filter_socrata ). val (), limit : $ ( #num_results_socrata ). val () }; $ . ajax ({ url : $ ( input:radio[name=optionsRadios]:checked ). val (), data : _data , method : GET , dataType : json , success : function ( data ) { console . info ( data ); if ( data ) { $ ( #results ). html ( Total results found: + data . resultSetSize ); $ ( #mygrid ). html ( ); if ( data . resultSetSize = 1 ) { $ ( #mygrid ). append ( ul ); $ . each ( data . results , function ( index , value ) { $ ( #mygrid ). append ( li b + value . resource . name + /b ( + value . resource . type + ): a target= _blank href= + value . link + + value . link + /a ); $ ( #mygrid ). append ( /li ); }); $ ( #mygrid ). append ( /ul ); } } else { $ ( #results ). html ( An error occured: ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina socrata.html y lanzamos b\u00fasquedas Note Ejercicio 1 : \u00bfC\u00f3mo filtrar\u00edamos para qu\u00e9 s\u00f3lo ense\u00f1ara \"assets\" de tipo \"map\", only:map ?","title":"Creaci\u00f3n de un buscador"},{"location":"recursos_open_data/#socrata-y-leaflet-mapificacion-de-resultados","text":"Creamos un archivo con el nombre de socrata_mapa.html . Abrimos el archivo socrata_mapa.html con un editor de texto y copiamos el siguiente c\u00f3digo. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 !DOCTYPE html html head meta charset = UTF-8 title Basic Leaflet Map sample API Discovery SOCRATA / title link rel = stylesheet href = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css / link rel = stylesheet href = https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.css / script type = text/javascript src = https://code.jquery.com/jquery-3.3.1.min.js / script script type = text/javascript src = https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/spin.js/2.3.2/spin.min.js / script script type = text/javascript src = https://cdnjs.cloudflare.com/ajax/libs/Leaflet.Spin/1.1.0/leaflet.spin.min.js / script style # results { width : 100 % ; background-color : #f2f2f2 ; margin : 5 px ; } / style / head body / body / html A\u00f1adimos dentro del tag body la maquetaci\u00f3n HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 div class = container h3 SOCRATA Maps Resources / h3 div class = row div class = col-md-6 p Discovery API br a target = _blank href = http://docs.socratadiscovery.apiary.io http://docs.socratadiscovery.apiary.io / a / p form div class = form-group div class = radio label input type = radio name = optionsRadios id = optionsRadios1 value = https://api.eu.socrata.com/api/catalog/v1 checked EU API Discovery / label / div div class = radio label input type = radio name = optionsRadios id = optionsRadios2 value = https://api.us.socrata.com/api/catalog/v1 US API Discovery / label / div / div div class = form-group label for = text_filter_socrata Filter u / u / label input type = text class = form-control id = text_filter_socrata value = placeholder = text filter div class = checkbox label input type = checkbox id = chk_transparencia value = analisi.transparenciacatalunya.cat Only https://analisi.transparenciacatalunya.cat / label / div div Filter : only=maps / div / div / form form class = form-inline div class = form-group label for = num_results_socrata Num results / label input type = number size = 3 class = form-control id = num_results_socrata value = 25 / div / form form div class = form-group button id = bt_send type = button class = btn btn-default btn-success Send / button / div / form hr div id = results / div div id = mygrid style = height: 365px;overflow:auto / div / div div class = col-md-6 div id = map style = width:100%;height:700px / div / div / div Abrimos el archivo socrata_mapa.html en el navegador. A\u00f1adimos just encima del tag /head el siguiente c\u00f3digo javascriptscript $ . ajaxSetup ({ cache : true }); var map ; var geojsonLayer ; var _LL ; $ ( document ). ready ( function () { map = L . map ( map ). setView ([ 41.6863 , 1.8382 ], 8 ); esri = L . tileLayer ( http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x} , { maxZoom : 17 , minZoom : 1 , attribution : Tiles \u00a9 Esri , }) osm = L . tileLayer ( http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png , { maxZoom : 19 , minZoom : 1 , attribution : OSM }). addTo ( map ); Stamen_Toner = L . tileLayer ( http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png , { attribution : Map tiles by a href= http://stamen.com Stamen Design /a , a href= http://creativecommons.org/licenses/by/3.0 CC BY 3.0 /a mdash; Map data copy; a href= http://www.openstreetmap.org/copyright OpenStreetMap /a , subdomains : abcd , minZoom : 0 , maxZoom : 20 }) var baseMaps = { Orto : esri , Mapa : osm , Toner : Stamen_Toner }; L . control . layers ( baseMaps , null ). addTo ( map ); L . control . scale (). addTo ( map ); $ ( #bt_send ). on ( click , function () { sendRequest (); }); $ ( #text_filter_socrata ). on ( keypress , function ( event ) { if ( event . which == 13 ) { sendRequest (); event . preventDefault (); } }); $ ( document ). on ( click , .btn-xs , function () { var attr = $ ( this ). attr ( data ); if ( attr attr . indexOf ( # ) != - 1 ) { var params = attr . split ( # ); var _url = https:// + params [ 1 ] + /api/views.json?method=getByResourceName name= + params [ 0 ]; $ . ajax ({ url : _url , method : GET , dataType : json , success : function ( data ) { if ( data . childViews ) { //var _url2 = https:// + params[1] + /resource/ + data.childViews[0] + .json?$limit=30 ; var _url2 = https:// + params [ 1 ] + /api/geospatial/ + data . childViews [ 0 ] + ?method=export format=GeoJSON ; sendRequestGEOJSON ( _url2 , true ); } else { var _url2 = http:// + params [ 1 ] + /resource/ + params [ 0 ] + .json?$limit=30 ; sendRequestGEOJSON ( _url2 , false ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } else { alert ( No resource available ); } }); function clearLayers () { if ( map . hasLayer ( geojsonLayer )) { map . removeLayer ( geojsonLayer ); }; if ( map . hasLayer ( _LL )) { map . removeLayer ( _LL ); }; } function sendRequestGEOJSON ( _url2 , isGeoJson ) { map . spin ( true ); var stylePoint = { radius : 8 , fillColor : #ff7800 , color : #000 , weight : 1 , opacity : 1 , fillOpacity : 0.8 }; clearLayers (); $ . ajax ({ type : GET , url : _url2 , // jsonp: $jsonp , // dataType: jsonp , success : function ( response ) { if ( isGeoJson ) { geojsonLayer = L . geoJson ( response , { style : function ( feature ) { return { weight : 2 , color : #999 , opacity : 1 , fillColor : #B0DE5C , fillOpacity : 0.8 }; }, onEachFeature : popUp }). addTo ( map ); map . fitBounds ( geojsonLayer . getBounds ()); map . spin ( false ); } else { _LL = L . featureGroup () for ( var i = 0 ; i response . length ; i ++ ) { var marker = response [ i ]; if ( response [ i ]. location_1 ) { L . circleMarker ([ response [ i ]. location_1 . latitude , response [ i ]. location_1 . longitude ], stylePoint ). addTo ( _LL ); } else if ( response [ i ]. location ) { L . circleMarker ([ response [ i ]. location . latitude , response [ i ]. location . longitude ], stylePoint ). addTo ( _LL ); } else { $ ( #results ). html ( ERROR no locations found ); map . spin ( false ); } } _LL . addTo ( map ); map . panTo ( _LL . getBounds (). getCenter ()); map . spin ( false ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); map . spin ( false ); } }); } function popUp ( f , l ) { var out = []; if ( f . properties ) { for ( key in f . properties ) { out . push ( key + : + f . properties [ key ]); } l . bindPopup ( out . join ( br / )); } } function sendRequest () { var _data = { limit : $ ( #num_results_socrata ). val (), only : maps }; console . info ( $ ( #chk_transparencia ). attr ( checked )); if ( $ ( #chk_transparencia ). attr ( checked )) { _data . domains = $ ( #chk_transparencia ). val (); } if ( $ ( #text_filter_socrata ). val () != ) { _data . q = $ ( #text_filter_socrata ). val (); } $ . ajax ({ url : $ ( input:radio[name=optionsRadios]:checked ). val (), data : _data , method : GET , dataType : json , success : function ( data ) { console . info ( data ); if ( data ) { $ ( #results ). html ( Total results found: + data . resultSetSize ); $ ( #mygrid ). html ( ); if ( data . resultSetSize = 1 ) { var cList = $ ( ul ). appendTo ( #mygrid ); $ . each ( data . results , function ( index , value ) { $ ( li class= li b + value . resource . name + : /b + a target= _blank href= + value . link + Link /a + a class= btn btn-success btn-xs href= # data= + value . resource . id + # + value . metadata . domain + Map it /a ). appendTo ( cList ); }); } } else { console . info ( data ); $ ( #results ). html ( An error occured: ); } }, error : function ( xhr ) { $ ( #results ). html ( An error occured: + xhr . status + + xhr . statusText ); } }); } }); /script Abrimos p\u00e0gina socrat_mapa.html y lanzamos b\u00fasquedas Note Ejercicio 1 : A\u00f1adimos attribution y download_count a los resultados Note Ejercicio 2 : \u00bfCambiamos colores y estilos de los puntos del mapa? Referencias http://docs.ckan.org/en/latest/api/ http://ckan.org https://www.socrata.com http://docs.socratadiscovery.apiary.io","title":"Socrata y Leaflet: Mapificaci\u00f3n de resultados"},{"location":"taller_github/","text":"GitHub Recursos GitHub Web https://github.com/ Tutorial https://guides.github.com/activities/hello-world/ Github Pages https://guides.github.com/features/pages/ Tutorial http://rogerdudler.github.io/git-guide/index.es.html Wikipedia https://es.wikipedia.org/wiki/GitHub Descripci\u00f3n GitHub es un reporsitorio de c\u00f3digo d\u00f3nde podremos subir nuestros proyectos y tambi\u00e9n hosting de una p\u00e0gina web. Ejemplo crear web site Requisitos Instalar cliente GIT para windows https://git-scm.com/download/win Paso 1 Crear usuario en: https://github.com/ Paso 2 Creamos nuevo repo llamado geoweb Copiamos URL del proyecto Paso 3 (opcion 1 nuestro caso).Si el directorio (proyecto) no existe en mi PC. Voy a mi espacio de trabajo bot\u00f3n derecho del mouse -- \"git bash here\" y escribo en la consola git clone y pego la URL + Enter 1 git clone https://github.com/ { tu usuario git } /geoweb.git Paso 3 (opcion 2). Si ya existe el directorio (proyecto) Crearemos repo des de nuestro pc Tutorial Nos situamos dentro del directorio geoweb de nuestro servidor y abrimos termial git (bot\u00f3n derecho mouse y Git Bash here) 1 2 3 4 5 6 git init git add . git commit -m proyecto geoweb git remote add origin https://github.com/ { tu usuario git } /geoweb.git git remote -v git push -u origin master Atentificamos con usuario y password Paso 4 Abrimos VSCode y a\u00f1adimos directorio geoweb File -- Add folder to workspace Paso 5 Creamos y/o editamos archivo readme.md 1 2 3 4 5 ### Proyector Geoweb ### Documentaci\u00f3n del curso [ https://gis-master-m2.github.io/m2-geoweb/ ]( https://gis-master-m2.github.io/m2-geoweb/ ) Paso 6 A\u00f1adimos y/o editamos archivo hola.html 1 2 3 4 5 6 7 html head / head body h3 Hola / h3 / body / html Paso 7 Abrimos una terminal en VSCode View -- Terminal y dentro de la terminal escribimos (linea + tecla Enter) 1 git pull 1 git add . 1 git commit -m change readme 1 git push -u origin master En total habr\u00edamos escrito estas 4 lineas 1 2 3 4 git pull git add . git commit -m change readme git push -u origin master Note Cada vez que editamos debemos hacer esta operaci\u00f3n para subir c\u00f3digo Paso 8 Para convertir el repo en una p\u00e1gina web, vamos al proyecto geoweb en github.com Seleccionamos opci\u00f3n Settings GitHub Pages opci\u00f3n master branch Para recuperar (clonar) nuestro trabajo en casa, por ejemplo Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -- \"Git bash here\" Note Si no aparece \"Git bash here\", tienes que instalar el cliente GIT https://git-scm.com/download/win Para (clonar) clonar la doumentaci\u00f3n del curso Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -- \"Git bash here\" 1 git clone https://github.com/gis-master-m2/m2-geoweb.git Para actualizar-sincronizar documentacion Nos situamos dentro del directorio del proyecto, por ejemplo geoweb o m2-geoweb. Bot\u00f3n derecho del mouse -- \"Git bash here\" 1 git pull Medium Recursos Medium Web https://medium.com// Tutorials https://help.medium.com/hc/en-us/articles/225168768 https://help.medium.com/hc/en-us/articles/115004681607-Create-a-publication Tutorial https://blog.hubspot.com/marketing/how-to-use-medium Wikipedia hhttps://es.wikipedia.org/wiki/Medium_(servicio) Descripci\u00f3n Medium es un servicio de publicaci\u00f3n de blogs fundado por los cofundadores de Twitter Evan Williams y Biz Stone en agosto de 2012.1\u200b La plataforma ha evolucionado hacia un h\u00edbrido de contribuciones no profesionales, profesionales y pagadas. Algunos art\u00edculos de Medium sobre Leaflet https://medium.com/@Marseltov/how-good-is-leaflet-js-671b1bfe5505 https://medium.com/@michaelcoleman19/getting-started-with-leaflet-a0c859a5f80 https://medium.com/@dominicleung/first-try-with-leaflet-js-908bb04b5d95 Note Nos damos de alta com usuarios en Medium https://medium.com/","title":"2. Plataformas GitHub y Medium.Lenguaje Git."},{"location":"taller_github/#github","text":"","title":"GitHub"},{"location":"taller_github/#recursos-github","text":"Web https://github.com/ Tutorial https://guides.github.com/activities/hello-world/ Github Pages https://guides.github.com/features/pages/ Tutorial http://rogerdudler.github.io/git-guide/index.es.html Wikipedia https://es.wikipedia.org/wiki/GitHub","title":"Recursos GitHub"},{"location":"taller_github/#descripcion","text":"GitHub es un reporsitorio de c\u00f3digo d\u00f3nde podremos subir nuestros proyectos y tambi\u00e9n hosting de una p\u00e0gina web.","title":"Descripci\u00f3n"},{"location":"taller_github/#ejemplo-crear-web-site","text":"Requisitos Instalar cliente GIT para windows https://git-scm.com/download/win","title":"Ejemplo crear web site"},{"location":"taller_github/#paso-1","text":"Crear usuario en: https://github.com/","title":"Paso 1"},{"location":"taller_github/#paso-2","text":"Creamos nuevo repo llamado geoweb Copiamos URL del proyecto","title":"Paso 2"},{"location":"taller_github/#paso-3-opcion-1-nuestro-casosi-el-directorio-proyecto-no-existe-en-mi-pc-voy-a-mi-espacio-de-trabajo","text":"bot\u00f3n derecho del mouse -- \"git bash here\" y escribo en la consola git clone y pego la URL + Enter 1 git clone https://github.com/ { tu usuario git } /geoweb.git","title":"Paso 3 (opcion 1 nuestro caso).Si el directorio (proyecto) no existe en mi PC. Voy a mi espacio de trabajo"},{"location":"taller_github/#paso-3-opcion-2-si-ya-existe-el-directorio-proyecto","text":"Crearemos repo des de nuestro pc Tutorial Nos situamos dentro del directorio geoweb de nuestro servidor y abrimos termial git (bot\u00f3n derecho mouse y Git Bash here) 1 2 3 4 5 6 git init git add . git commit -m proyecto geoweb git remote add origin https://github.com/ { tu usuario git } /geoweb.git git remote -v git push -u origin master Atentificamos con usuario y password","title":"Paso 3 (opcion 2). Si ya existe el directorio (proyecto)"},{"location":"taller_github/#paso-4","text":"Abrimos VSCode y a\u00f1adimos directorio geoweb File -- Add folder to workspace","title":"Paso 4"},{"location":"taller_github/#paso-5","text":"Creamos y/o editamos archivo readme.md 1 2 3 4 5 ### Proyector Geoweb ### Documentaci\u00f3n del curso [ https://gis-master-m2.github.io/m2-geoweb/ ]( https://gis-master-m2.github.io/m2-geoweb/ )","title":"Paso 5"},{"location":"taller_github/#paso-6","text":"A\u00f1adimos y/o editamos archivo hola.html 1 2 3 4 5 6 7 html head / head body h3 Hola / h3 / body / html","title":"Paso 6"},{"location":"taller_github/#paso-7","text":"Abrimos una terminal en VSCode View -- Terminal y dentro de la terminal escribimos (linea + tecla Enter) 1 git pull 1 git add . 1 git commit -m change readme 1 git push -u origin master En total habr\u00edamos escrito estas 4 lineas 1 2 3 4 git pull git add . git commit -m change readme git push -u origin master Note Cada vez que editamos debemos hacer esta operaci\u00f3n para subir c\u00f3digo","title":"Paso 7"},{"location":"taller_github/#paso-8","text":"Para convertir el repo en una p\u00e1gina web, vamos al proyecto geoweb en github.com Seleccionamos opci\u00f3n Settings GitHub Pages opci\u00f3n master branch","title":"Paso 8"},{"location":"taller_github/#para-recuperar-clonar-nuestro-trabajo-en-casa-por-ejemplo","text":"Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -- \"Git bash here\" Note Si no aparece \"Git bash here\", tienes que instalar el cliente GIT https://git-scm.com/download/win","title":"Para recuperar (clonar) nuestro trabajo en casa, por ejemplo"},{"location":"taller_github/#para-clonar-clonar-la-doumentacion-del-curso","text":"Nos situamos en un directorio de nuestor PC. Bot\u00f3n derecho del mouse -- \"Git bash here\" 1 git clone https://github.com/gis-master-m2/m2-geoweb.git","title":"Para (clonar) clonar la doumentaci\u00f3n del curso"},{"location":"taller_github/#para-actualizar-sincronizar-documentacion","text":"Nos situamos dentro del directorio del proyecto, por ejemplo geoweb o m2-geoweb. Bot\u00f3n derecho del mouse -- \"Git bash here\" 1 git pull","title":"Para actualizar-sincronizar documentacion"},{"location":"taller_github/#medium","text":"","title":"Medium"},{"location":"taller_github/#recursos-medium","text":"Web https://medium.com// Tutorials https://help.medium.com/hc/en-us/articles/225168768 https://help.medium.com/hc/en-us/articles/115004681607-Create-a-publication Tutorial https://blog.hubspot.com/marketing/how-to-use-medium Wikipedia hhttps://es.wikipedia.org/wiki/Medium_(servicio)","title":"Recursos Medium"},{"location":"taller_github/#descripcion_1","text":"Medium es un servicio de publicaci\u00f3n de blogs fundado por los cofundadores de Twitter Evan Williams y Biz Stone en agosto de 2012.1\u200b La plataforma ha evolucionado hacia un h\u00edbrido de contribuciones no profesionales, profesionales y pagadas.","title":"Descripci\u00f3n"},{"location":"taller_github/#algunos-articulos-de-medium-sobre-leaflet","text":"https://medium.com/@Marseltov/how-good-is-leaflet-js-671b1bfe5505 https://medium.com/@michaelcoleman19/getting-started-with-leaflet-a0c859a5f80 https://medium.com/@dominicleung/first-try-with-leaflet-js-908bb04b5d95 Note Nos damos de alta com usuarios en Medium https://medium.com/","title":"Algunos art\u00edculos de Medium sobre Leaflet"},{"location":"visualizacion_con_kepler_gl/","text":"Visualizaci\u00f3n con Kepler.gl Kepler.gl desrrollada por Uber, en u principio para uso interno, para analizar y visualizar sus propios datos. Es una aplicaci\u00f3n basada en web GL de alto rendimiento y agn\u00f3stica de datos para la exploraci\u00f3n visual de conjuntos de datos de geolocalizaci\u00f3n a gran escala. Construido en la parte superior de deck.gl, kepler.gl puede representar millones de puntos que representan miles de viajes y realizar agregaciones espaciales sobre la marcha. Ejercicio de visualizaci\u00f3n con Kepler.gl Tip Queremos ver d\u00f3nde hay m\u00e1s accidentes Descargamos dataset CSV de OpenData BCN Vamos a http://kepler.gl/#/demo A\u00f1adimos csv Add Layer: Type Hexbin Columns: Latitud Longuitud Color: Scale Quantize Hexagon radius 0.1 Coverage 0.75 Info Continuamos a\u00f1adiendo m\u00e1s capas y mapas bases","title":"Visualizacion con kepler gl"},{"location":"visualizacion_con_kepler_gl/#visualizacion-con-keplergl","text":"Kepler.gl desrrollada por Uber, en u principio para uso interno, para analizar y visualizar sus propios datos. Es una aplicaci\u00f3n basada en web GL de alto rendimiento y agn\u00f3stica de datos para la exploraci\u00f3n visual de conjuntos de datos de geolocalizaci\u00f3n a gran escala. Construido en la parte superior de deck.gl, kepler.gl puede representar millones de puntos que representan miles de viajes y realizar agregaciones espaciales sobre la marcha.","title":"Visualizaci\u00f3n con Kepler.gl"},{"location":"visualizacion_con_kepler_gl/#ejercicio-de-visualizacion-con-keplergl","text":"Tip Queremos ver d\u00f3nde hay m\u00e1s accidentes Descargamos dataset CSV de OpenData BCN Vamos a http://kepler.gl/#/demo A\u00f1adimos csv Add Layer: Type Hexbin Columns: Latitud Longuitud Color: Scale Quantize Hexagon radius 0.1 Coverage 0.75 Info Continuamos a\u00f1adiendo m\u00e1s capas y mapas bases","title":"Ejercicio de visualizaci\u00f3n con Kepler.gl"}]}